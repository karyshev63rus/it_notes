Здесь будет информация о СУБД: как, что и зачем (акцент на работу с postgres в командной строке)
-----------------------------------

==========
POSTGRESQL
==========

УСТАНОВКА И УДАЛЕНИЕ сервера и всего прочего, связанного с postgresql
--------------------
sudo apt install posrgreql postgresql-contrib - установка СУБД Postgresql
sudo apt-get --purge remove postgresql postgresql-12  postgresql-client  postgresql-client-12 postgresql-client-common postgresql-common  postgresql-contrib postgresql-contrib-12 - команда для сноса всего


СОЗДАЕМ БАЗУ ДАННЫХ на сервере postgresql, например, для подключения к ней django-проекта:
-------------------
1. sudo service postgresql start - запустить сервер с БД 
2. sudo -u -i postgres psql - открыть сессию работы с БД 
3. CREATE DATABASE <dbname>; - создать БД для проекта
4. CREATE USER 	<dbusername> WITH PASSWORD '<password>'; - создать пользователя с паролем (кавычки обязательны)
5. GRANT ALL PRIVILEGES ON DATABASE <dbname> TO <dbusername>; - права админа БД
6. \q - закрыть сессию
7. данные о созданных базе и пользователе прописываем в файле # settings.py


ПОЛЕЗНЫЕ КОМАНДЫ
----------------
\l - выводит список БД
\s - выводит историю команд (?)
\conninfo - вывести информацию о текущем соединении (например, "You are connected to database 'postgres' as user 'postgres' via socket in '/var/run/postgresql' at port '5432'.")
\d - выводит список таблиц в текущей БД (?)
\c имя_БД - переключение на другую БД внутри psql/var/log/postgresql/postgresql-12-main.log - логи


СЛУЧАИ
------
Была проблема: программа с Postgres ставится и сервер запускается, но после перезагрузки компьютера при попытке запуска появляется ошибка - нет папки по адресу /var/run/postgresql.
Создавал такую папку, но вываливались новые ошибки - нет доступа. В итоге пришлось создать такую папку и поменять ее владельца:
cd /var/run/; mkdir postgresql; chown postgres:postgres postgresql - и, наконец-то, сервер стал запускаться и после перезагрузки системы (т.е. компа)
---------------------------------

=====
REDIS
=====

Установка на ubuntu:
--------------------
1. sudo apt install redis-server - устанавливаем серверную базу данных redis через менеджер пакетов apt
2. sudo vim /etc/redis/redis.conf - открываем конфгурационный файли правим строку "supervised no", заменяя 'no' на 'systemd'
3. sudo systemctl restart redis.service - перезапускаем сервер redis для вступления изменений в силу 
:
Для WSL2
--------
1. вводится дополнительная команда: sudo systemctl enable redis-server.service 
2. после чего запускается сервер: sudo service redis-server start

Тестирование redis:
-------------------
sudo systemctl status redis (для WSL2 не работает)

Работа в терминале:
-------------------
1. redis-cli - подключение к серверу с помощью клиента командной строки

