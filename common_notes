Notes
=====

26 декабря 2020 г.
------------------
Продолжается изучение PostgreSQL. Требования к СУБД в плане проведения транзакций (ACID) - атомарность, согласованность, изолированность, долговечность (надежность).
Начинается ознакомление с "Приложением 12 факторов" - требованиями к разработке и развертыванию современого программного софта в виде веб-приложений:
I. Кодовая база: одна кодовая база, отслеживаемая системой контроля версий, и множество развертываний; 
II. Зависимости: явно объявляйте и изолируйте зависимости;
III. Конфигурация: сохраняйте конфигурацию в среде выполнения;
IV. Сторонние службы: считайте сторонные службы подключаемыми ресурсами;
V. Сборка, релиз, выполнение: строго разграничивайте сборку и выполнение;
VI. Процессы: запускайте приложение как один или несколько процессов не сохраняющих внутреннее состояние;

27 декабря 2020 г.
------------------
Еще три фактора 12-факторного приложения:
VII. Привязка портов: экспортируйте сервисы через привязку портов;
VIII. Параллелизм: масштабируйте приложение с помощью процессов;
XI. Утилизируемость: максимизируйте надежность с помощью быстрого запуска и корректного завершения работы;
Масштабируемость - способность системы, сети или процесса реагировать на изменение рабочей нагрузки; регулировать степень использования ресурсов (запускать новые или останавливать работающие процессы) в зависимости от поступления новых задач;
Запустил на linux приложение на основе  Dockerfile и docker-compose; на винде установил подсистему Ubuntu20.04 и также запустил приложение, собрав образ из докер-файла. Пробросил порты и открыл в браузере на хост-машине.

28 декабря 2020 г.
------------------
Последние три фактора из Приложения 12-ти факторов:
X. Паритет разработки/работы приложения: держите окружение разработки, промежуточного развертывания и рабочего развертывания максимально похожими;
XI. Журналирование: рассматривайте журнал как поток событий;
XII. Задачи администрирования: выполняйте задачи администрирования/управления с помощью разовых процессов
Пытался запустить контейнер с приложением (отключенным от SQLite3) совместно с контейнером на основе Postgresql путем сборки на основе файла docker-compose.yml - не получилось. Но получилось просто запустить приложение с подключением его к PG (для чего специально создал postgres-базу данных).
UPD. Запустить удалось, прописав в docker-compose файле две строки (под строкой image: postgresql:12 и с тем же отступом - нашел их в репо книги на гитхабе):
    enviroment:
    - "POSTGRES_HOST_AUTH_METHOD=trust"

29 декабря 2020 г.
------------------
Продолжаю изучать книгу Django for professionals. Освоил 3-ю главу, где создается кастомная модель пользователя (правда, пока непонятно, зачем она нужна): пока это привело только к изменению внешнего вида административной страницы сайта. Пробовал поставить chrome на ubuntu-подсистему винды; не удалось, но зато выяснил, как решать проблемы с недопоставившимися пакетами (см. в  файле linux_notes).

30 декабря 2020 г.
------------------
Освоил 4-ю и 5-ю главы книги (посвящены шаблонам, тестированию, входу-выходу и регистрации). Удобно работать с запушенным в фоне docker-compose: командой docker-compose exec web python manage.py tests users можно запускать тесты  конкретно приложения test без остановки запущенных контейнеров.
О проблеме подключения контейнера с  django к базе данных postgres на локальном сервере (тот, что запускается с pgAdmin4): подключить удается только тот контейнер, что создан в "правильной" виндовской среде (через cmd-консоль); контейнер, созданный в линуксовском окружении, не подлючается (через команду ps aux даже не  выявляются процессы с названием, включающим 'postgres').

31 декабря 2020 г.
------------------
Изучил еще две главы: 6 и 7 - про подключение статистических файлов и кастомную регистрацию, соответственно. Не обошлось без bootstrap4 (изучение этого фреймворка еще впереди - уже скачан нужный курс от WebForMyself).

1 января 2021 г.
----------------
Изучил главы 8, 9 и 10: соответственно, о переменных окружения, настройке почты и об использовании UUID в качестве первичного ключа. Переменные поключил сначала через опцию "- environment" в файле docker-compose, а затем через dotenv (привет Devman). Для почты использовал второй gmail-овский ящик. При использовании UUID в качестве первичного ключа надо было снести БД - снес и восстановил.

2 января 2021 г.
----------------
Прошел три главы: 11-ю - создание приложения для публикации комментов (интересно реализацией внешних ключей); 12-ю - о загрузке на сайт файлов (в т.ч. изображений) через админку; 13-ю - введение разграничений прав пользователей (здесь все вроде бы получилось - сайт работает как надо - но тесты (2 из 4 по данному приложению) не проходят(запуска код автора, то же самое)).

3 января 2021 г.
----------------
Просмотрел три последних занятия (из четвертой части) базового курса по python от OTUS (вел Сурен). Речь шла о CI/CD на основе Gitlab (особо не вникал). Зарегистрировался в почтовом сервисе Mailgun (mailgun.com) - можно будет его использовать после деплоя (т.к. для работы сервиса требуется указать домен).

4 января 2021 г.
----------------
Изучил еще две главы: 14-ю - она посвящена подключению платежной системы Stripe (поначалу подключиться не удавалось - вываливался аллерт о том, что API ключ is invalid. Потому вдруг сервис подключился, почему именно, точно не ясно); 15-ю - о добавлении функции поиска по сайту. Да. Впервые за последние несколько месяцев достал гг - думаю, продолжу освоение ирландщины.


5 января 2021 г.
----------------
Освоил главу 16, посвященную проблемам производительности приложения и отладке с помощью debug_toolbar, а также кешированию и применению индексов к БД. Поставил струны на гитару и заказал в Перми комбик fender frontman 25r.

6 января 2021 г.
----------------
Справился с главой 17, основной проблемой стало то, что вдруг поерестала открываться страница сайта при перезапусках двух версий приложения (соответственно, на основе docker-compose.yml и docker-compose-prod.yml) - долго не мог понять причину, оказалось дело в схеме http:// https:// - когда запускал контейнер на основе https (здесь страница, разумеется, не открывалась), последующий запуск контейнера на основе http не приводил к автоматической смене схемы (т.е. я пытался открыть http по схеме https - в логах об этом было ясно сказано: "You're accessing the development server over HTTPS, but it only supports HTTP", но все равно не мог понять, что имеется в виду). В итоге разобрался и в docker-compose.yml заменил внешний порт на 8008, поскольку порт в строке виден всегда, в отличие от варианта схемы.
Начал главу 18, где речь идет о развертывании сайта на удаленном сервере (здесь, как и в книге для beginners, используется Heroku). Из виндовской убунты достучаться до heroku не получилось (и вряд ли это возможно, да и зачем), поэтому буду развертывать в оболочке командной строки хостовой машины (т.е. в cmd; уже копирнул код из  /home в /mnt/d/...).

7 января 2021 г.
----------------
Произвел деплой проекта на сервер Heroku (и не один раз). Чувства смешанные: во-первых, как оказалось, данные из локальной БД в БД на сервере автоматически не переносятся (но вроде бы, их можно копировать, правда пока непонятно как); во-вторых, есть проблемы с картинками - их не удается ни залить через админку, ни взять из media/covers (где лежат обложки книг); в-третьих, не срабатывает уровень доступа по условию оплаты (конкретно: доступ к книжкам открывается, а зеленая кнопка 'Purchase All Books' не исчезает, так что книжки можно прикупить еще не раз))). Буду разбираться, тем более, что последняя проблема есть и на локальной версии сайта - там не проходят тесты и исчезновение кнопки срабатывает с опозданием (но срабатывает). 
Да, еще не отправляется почтовое сообщение при регистрации нового посетителя (выдает 500-ю ошибку). Сейчас почта рассылается через gmail; надо будет подключить mailgun и там уже смотреть.

8 января 2021 г.
----------------
Начал конспектировать Django for Professionals (сделал 1-3 главы). Пробежал книжку по DRF, но не Винсента, а другую (скачал ее из группы VK); она на русском и написана доходчиво - буду осваивать параллельно с книгой Винсента.

9 января 2021 г.
----------------
Законспектировал главы с 4 по 10. В сжатом виде все намного нагляднее.

10 января 2021 г.
-----------------
Завершил конспектирование книги. Вступил в группу VK "Django_Python" для интересующихся Django (как я понял, основатель и драйвер проекта Алексей Голобурдин, посмотрел несколько его видео - проникся и задонатил за 3 переводные книги); подписался на канал "Диджитализируй!" (платформа boosty.to). Решил попрактироваться в работе с БД (причем именно через терминал), для чего установил на WSL софт Postgres и завел в репо it_notes файл для записей по СУБД (dbms_notes).

11 января 2021 г.
-----------------
Мучился с установкой Postgresql (подробнее в dbms_notes, проблемы все таки решил); случайно снес каталог run, в котором среди прочего содержатся сокет-файлы docker. 
В процессе лечения снес Docker Desktop (думал, что при его переустановки автоматом создадутся нужные файлы в wsl, но нет). В итоге переустановил саму wsl (надо было просто снять ту самую галочку Linux подсистема Windows). 
После переустановки оказалось, что нужный каталог вместе с файлами появился, а пользовательские данные остались - т.е. система восстановилась (и это радует - отделался малой кровью).
Начал просматривать русский перевод Django for begginers (интересные места собираюсь законспектировать).

12 января 2021 г.
-----------------
Создал два приложения (каждое в две страницы - одна выводит список котов, а другая - страница для каждого кота) в порядке тренировки (модель Cat). Первое приложение основано на контроллерах-классах (сложностей не вызвало, только лишь были некоторые трудности с шаблонами). Второе использует контроллеры-функции (а вот это было весьма тяжело, но теперь есть понимание, что такое Cat.objects.all() и Cat.objects.get(id=pk) плюс куда и какие параметры передавать: catslist(request) и catdetail(request, pk)).

13 января 2021 г.
-----------------
Посмотрел примерно половину курса от WebforMyself "Инструменты Front-end разработчика" - речь шла об особенностях установки и использования Notepad++, SublimeText3, Git, Chrome Devtools (наконец-то, явно осознал, зачем нужны ветки для тех, кто разрабоатывает один - для внедрения кода в эксплуацтацию и параллельной разработки дополнительного функционала).

14 января 2021 г.
-----------------
Завел еще один репо на github (github.com/karyshevm) и решал проблему переключения доступа к двум репо по ssh-ключам на одной машине без всяких перелогиниваний. В инете окончательного решения не нашел (но нашел промежуточное, которое вообще позволяет как-то переключаться), и в итоге создал два конфиг-файла (для каждого репо). Теперь через алиасы, прописанные в .bashrc, копирую нужный вариант в файл .ssh/config и все работает (загадка момента в том, что каждый из файлов содержит оба ключа, а так же тот аккаунт, к которому НЕ НАДО присоединяться!!!). 

15 января 2021 г.
-----------------
Занимался прояснением того, как следует начинать разработку проекта. Основная проблема - для варианта создания виртуальной среды (при помощи pipenv) pycharm не всегда может создать или найти соответствующий базис (папку). Думаю, это решается не в лоб, а с помощью Dockerа. Так, выяснилось, что если IDE даже и не может активировать виртуальную среду (да, именно это и есть главная проблема в pycharm) и из нее уже открыть приложение (например, запустить сервер django), то запуск на основе Dockerfile позволяет это сделать (а если подключить к этому дело docker-compose, то вопрос решается). Надо формализовать данный процесс.

16 января 2021 г.
-----------------
Решил вопрос об ssh-подключении к нескольским репо на одном компе в wsl: создал для каждого из подключений к конкретному репо свой конфигурационный файл и написал bash-скрипт, который этими переключениями управляет (сначала распознается владелец репо, потом в официальный конфиг копируется нужный вариант конфига, после чего выполняется команда git push). Повесил этот скрипт не только на push, но и fetch с pull-ом.
На канале Диджитализируй! узнал о такой классной штуке, как Tmux, и приступил к его изучению (сейчас набираю этот текст в tmux-сессии).

17 января 2021 г.
-----------------
Приступил к изучению Tmux (создал здесь файл с описанием команд, настроек и т.д.). Параллельно скачал материалы по работе с облачными провайдерами (AWS, Asure, Gitlab) - почитаю-посмотрю для создания общего представления о предмете.

18 января 2021 г.
-----------------
Закончил ознакомление с книгой о tmux. Поставил программу (по умолчанию ее не было) и гитхабовский конфиг на dell. Большинство проблем с  настройками удалось решить (например, копирование). Постараюсь использовать "Терминальный мультиплексор" как базисный инструмент для работы в командной стрoке (да, проблемы все же есть, команды vim работают несколько иначе - например, шагание по страницам комбинацией Shift+стрелки вверх-вниз здесь не поддерживается).

19 января 2021 г.
-----------------
Посмотрел вебинар (№ 3) по облачным сервисам GibLab, AWS и Azure. Начал читать книгу "Чистый код" Роберта Мартина. 

20 января 2021 г.
-----------------
Просмотрел вебинары №№ 4 и 5, а также половину 6-го)) (другой преподаватель и другой стиль ведения - 2,5 - 3 часа эфира - нагоняет тоску). Книга "Чистый код" будет интересна, в первую очередь, java-программистам - примеры в ней приведены именно на этом языке (или на C++). Главное помнить, что чистый код - это тщательно проработанный код, который хорошо читаем и обладает четкой структурой и понятной  логикой (возможно, вернусь к книге потом. Да, там говорится по некое правило Леблана - потом, значит никогда - на, да увидим...). Начал пересматривать курс по django от WebForMyself - информация воспринимается по-новому, многое понятнее и потому интереснее.

21 января 2021 г. 
-----------------
Начал читать книгу Антонио Меле "Django 2 в примерах" (русский перевод, 2019). Интересно, более сжато по сравнению с Дроновым. Продолжаю смотреть курс от WebForMyself (часть 1, 11 из 55). 

22 января 2021 г.
-----------------
Целый день потратил на то, чтобы сделать шаблон проекта на основе докера и без использования пакетов создания виртуальной среды (например, pipenv), посколь они, по сути, дублируют друг друга и привносят некоторую избыточность.
Сначала получалось - создал докер (в нем явно прописал pip install django && pip install psypg2-binary) и докер-композ файлы, на их основе запустил приложение. Но когда дошло дело до создания кастомной модели пользователя, докер начал барахлить.
В итоге прихожу к выводу, что pipenv нужен как запасной парашют на тот случай, когда что-то не запускается в докер-контейнере (и все равно есть какая-то неясность, которую я пока не могу сформилровать).

23 января 2021 г.
-----------------
Посмотрел два курса по Docker (оба на русском): от компании Слёрм и от платформы Udemy. 
Первый курс широкоаспектен (CI/CD на GitLab; сети; управление памятью и процессорным временем, которые выделяются контейнерам) и содержит множество команд (пару из них занес в алиасы), которые здесь же используются в командной строке при демонстрации примеров.
Второй курс спеацилированный (в нем рассказывается о Docker Swamp); подача материала обстоятельная, но управление кластерами нод, на которых запущены докер-контейнеры, для меня пока практического интереса не представляют (поэтому этот курс досмотрел до половины; вернусь к нему, когда возникнет потребность).
Приступаю к 3-ей главе книги "Django 2 в примерах" (речь в этой и предыдущих главах идет о создании такого веб-приложения, как блог).

24 января 2021 г.
-----------------
Прочитал 3-ю главу Примеров, законспектировал несколько уроков WFM. Параллельно решил возобновить знакомство с javascript (несколько лет назад на Stepik прошел начальный курс): скачал кое-то материалы и приступил к их изучению.

25 января 2021 г.
-----------------
Осилил 4-ю главу Примеров - здесь начинается создание социальной сети, для чего строится система аутентификации, регистрации, расширения возможностей пользовательского аккаунта за счет введения модели Profile в помощь уже существующей модели User.
Отдельно следует отметить рассмотрение регистрации через общеизвестные социальные сети (Fasebook, Twitter, Google+).
Прочел на Хабре статью от Слерм про Docker (появляется понимание, как писать код на хосте, а запускать в контейнере, не используя в качестве "стартера" файлы виртуальной среды). Законспектировал еще несколько уроков WFM (наследование html-шаблонов и создание пользовательских шаблонов, обратное разрешение интернет-адресов, статические файлы).

26 января 2021 г.
-----------------
Законспектировал еще несколько уроков WFM (формы - как основанные на моделях, так и не основанные; контроллеры-классы из django.views.generic). Посмотрел несколько уроков Д. Лаврика по JS для начинающих.

27 января 2021 г.
-----------------
Законспектировал все уроки (а их 8) по ORM Django из WFM - узнал основы и особенности обращения к бд с помощью orm-методов, а также через raw.sql()). Читаю онлайн-учебник по js от Ильи Кантора, завел здесь конспект js_notes.

28 января 2021 г.
-----------------
Законспектировал несколько уроков из WFM (отладчик debug_toolbar,  кастомизация админки, миксины, пагинация, регистрация). Продолжаю изучать js по Кантору.

29 января 2021 г.
-----------------
Досмотрел последние уроки WFM (визуальный редактор новостей в админке, капча, кэширование). Постараюсь в ближайшее время это дело законспектировать.

30 января 2021 г. 
-----------------
Отдыхал. 

31 января 2021 г.
-----------------
Читал хабр. Компания JetBrains выпустила Datalore - онлай-среду разработки на python. Удобная штука. Теперь можно не ставить Anaconda. 

1 февраля 2021 г.
-----------------
Пролистал электронный документ (оформлен как книга, но без всяких выходных данных) со слива - "[Для новичков] Python для заработка: манимейкинг, арибтраж, SEO. Реальные кейсы (2020)". Интересный текст, много примеров получения данных из сети. Есть в этих операциях (например, в проставлении лайков к комментариям постов) какой-то коммерческий смысл, надо бы разобраться.

2 февраля 2012 г.
-----------------
Закончил конспектирование курса WFM "Django. Полное руководство". Планирую приступить ко второй - практической - части курса. 

3 февраля 2021 г.
-----------------
Выполнил три первых урока части 2 из WFM (заканчивая переносом шаблона сайта в проект). Прочел 6-ю главу "Django в примерах" (окончание проекта социальной сети). Посмотрел несколько уроков по скрэпингу от Олега Молчанова. Тренируюсь делать pull requests - создал репо для проекта WFM на одном своем аккаунте и сделал форк от этого репо на другой аккаунт. 

4 февраля 2021 г.
-----------------
Работал с postgresql: в терминале создал роль, пароль, базу. Все это подключил к проекту из 2-й части WFM. Сделал миграцию, норм.

5 февраля 2021 г.
-----------------
Выполнил еще три урока (4,5,6) из WFM: создал модели, кастомизировал админку. Прочитал (бегло) 7-ю и 8-ю главы "Django в примерах" (создание онлайн-магазина). Бегло - потому, что в тексте приводится много подробностей, которые, надеюсь, еще буду изучать, когда приступлю к выполнению этих проектов.

6 февраля 2021 г.
-----------------
Отдыхал

7 февраля 2021 г.
-----------------
Видимо, так же отдыхаю. Вчера задумался о названиях коммита для этого файла: dairy или diary - конечно же, последнее правильно (его и буду использовать)

8 февраля 2021 г. 
-----------------
Отдыхал

9 февраля 2021 г.
-----------------
Скачал пару курсов: один по Flask, второй по Docker. Все еще отдыхаю, но завтра собираюсь начать восстанавливаться.

10 февраля 2021 г.
------------------
Посмотрел видео из второй части WFM по django, но изменения в код не вносил (оставлю это на потом).

11 февраля 2021 г.
------------------
Досмотрел до конца видео второй части (там чувствуется какой-то разрыв - после уроков о многоуровневых меню сразу же идут уроки о деплое). Теперь надо будет попробовать применить все это на практике (что потребует времени и принятия решения о выборе домена и хостинга; хорошо, что это не так дорого, но времени это дело отнимет значительное количество). 

12 февраля 2021 г.
------------------
Решал вопросы на работе.

13-15 февраля 2021 г.
---------------------
Самообразованием не занимался.

16 февраля 2021 г.
------------------
Выполнил уроки 7-11 из курса WFM (создание тега шаблона меню, вывод статей на главной и по категориям, пагинация).

17 февраля 2021 г.
------------------
Завершил локально (правда, без выполнения многоуровневого меню) проект WFM. Посмотрел предлагаемые в этом курсе вариант деплоя на REG.RU. Выяснил замечательную команду pipenv sync, которая снимает проблему отрыва кода приложения от его виртуальной среды. Занялся изучением деплоя на Heroku. Оказалось, что можно клонировать оттуда приложения на комп (со всеми вытекающими перспективами). Начал создавать конспект по вариантам деплоя.

18 февраля 2021 г.
------------------
Занимался изучением деплоя на heroku - как с использованием docker, так и без. Все нормально ставится и без контейнеризации. Налаживал почту на основе smpt.google.server - долго мучился, но вроде бы получилось, потом снова пошла ерунда (выдает ошибку аутентификации, а всего-то пытаюсь рассылать письма о регистрации на сайте). Ясно, что надо подключать нормальный специализированный сервер. Сделал описание подключения postgresql к django-проекту.

19 февраля 2021 г.
------------------
Начал выполнять учебный проект - онлайн-магазин по продаже соусов)) на основе книжки "Django made Easy" (Peter Vought). Как сказано на обложке, 'Build and deploy relieable Django applications, first edition'. Делу помогает то обстоятельство, что у издания есть репо на Bitbucket.
Насчет почтовых рассылок из Heroku я зря на этот сервис (а заодно и на гугл) грешил: мою рассылку периодически принимают за спам и блокируют доставку (письма на придуманные адреса, например, bob@mail.com, уходят  без проблем).

20 февраля 2021 г.
------------------
Продолжил выполнять вышеуказанный проект: создал корзину и обслуживание заказов. Подключил rabbitmq и celery (осталось лишь до конца разобраться, что это за сервисы и как они работают).

21 февраля 2021 г.
------------------
Освоил еще одну главу проекта - формирование сводных отчетов в формате .xlsx и накладных в формате .pdf. Остались две главы: приложение accounts (регистрация и логин-логаут) и деплой на ресурсах DigitalOcean. Начал изучать книгу Хорстмана "JavaScript для самых нетерпеливых" (автор позиционирует книгу в качестве учебника именно по "современному js", т.е. не тащит за собой весь багаж раннего синтаксиса и прочих "пережитков"). Думаю, это то, что мне надо. Да, на одной из картинок увидел фрагмент IDE WebStorm, и поскольку у меня имеется образовательная лицензия на продукты GB, я эту среду скачал и поставил; теперь есть более чем комфортные условия для изучения js. 

22 февраля 2021 г.
------------------
Сделал (практически) приложение по работе с аккаунтом. Было много вопросов и потраченного времени по поводу маршрутизации - джанго никак не желал находить шаблоны. И если в некоторых случаях это было объяснимо (путаница с латинскими 'q' и 'g', а также поиск страницы смены пароля на правах еще не  залогиненного пользователя), то вначале фреймворк вообще не хотел находить маршруты из специально созданных для этого (проверки маршрутов) функций-контроллеров и приложений. В итоге (благо, пока была возможность) пришлось отключить приложения в settings.py, после чего заработал маршрут проверочного приложения, а потом и другие "потерянные" маршруты.

23 февраля 2021 г. 
—-----------------
Закончил работу с кодом проекта. По идее, все работает (кроме оплаты через stripe - здесь выбрасывается исключениие по поводу invalid token). Читаю про деплой на digital ocean.

24 февраля 2021 г.
------------------
Скачал очередной курс по JavaScript - опять от Владилена Минина (того, что из WFM), но на этот раз не связанный с данной образовательной платформой. Курс посвящен разработке приложения типа excel (!?), автор обещает много интересного, в частности, написания фреймворка на основе простого js без всяких "присадок". Думаю, что пора вернуться к изучению "Django 2 в примерах" и начать с практической реализации первого проекта (это будет блог).

25 февраля 2021 г.
------------------
Смотрел на youtube-канале Владлена Минина его видео по js (общий обзорный курс продолжительностью почти 6 часов, а также часовой ролик по node.js). В очередной раз приступил к изучению ООП на python (youtube-канал selfedu - кстати, этот товарищ очень доходчиво рассказывает о django - есть у него и такой плейлист). К проекту из Примеров планирую приступить завтра.

26, 27, 28 февраля 2021 г.
--------------------------
Начал проект по созданию блога из "Django 2 в примерах", изучил и законспектировал в коде  4 (из 14) видеоурока по ООП на python. Отдохнул.

1 марта 2021 г.
---------------
Отдыхал. Чувствую, что теряю темп обучения. Интерес по-прежнему присутствует, но внешние раздражители...

2 марта 2021 г.
---------------
Посмотрел несколько видео по ООП от selfedu (5-7 из 14). Прошел по ссылке на сайт (я так понимаю, что его же сайт - proproprogs.ru). Там интересные материалы по python, javascript и ИИ.

3 марта 2021 г.
---------------
Законспектировал видеоуроки №№ 5-8 по ООП на python. Сложно, но интересно.

4 марта 2021 г.
---------------
Работал над проектом № 1 из книги 'Django 2 by Example': сделал пагинацию, возможность рекомендовать пост по почте, комментировать пост, теги, карту сайта, RSS, полнотекстовый поиск, подключил postgresql.  Практически закончил (остался стемминг (?) и ранжирование результатов). Коммитил в две ветки - сначала в features, затем в master. Битбакет ведет себя несколько отлично от Гитхаба - удаленный репо почему-то не хочет прибавляться к локальному репо, если в последнем уже что-то есть (т.е. прибавляется, но push/pull не идут). Т.е. работает только  клонирование, либо git remore add origin ... в случае пустого локального репо.

5 марта 2021 г.
---------------
Закончил учебный проект № 1 (блог) и приступил к проекту № 2 (социальная сеть). Возникают проблемы с маршрутами: вместо одного из кастомных маршрутов вылезает предустановленный (по адресу password_change). Это происходит несмотря на выполнение рекомендаций автора книги: ставить приложение account выше приложения admin. Просмотрел до конца серию видео по ООП от selfedu - есть интересные аспекты, такие как объясление особенностей методов @classmethod и @staticmethod; узнал, что такое "функторы" (классы, используемые как функции), уяснил понятие полиморфизма (работа с различными объектами на основе одного и того же метода - в качестве примера говорится о методах подсчета длины периметра для разных геометрических фигур: методы называются одинаково, но применяемые формулы расчета различаются).

6 марта 2021 г.
---------------
В рамках проекта № 2 выполнил аутентификацию (login) через указание вместо имени пользователя его почтового адреса. Кроме того, наладил регистрацию через аккаунт google (для регистрации через сети надо ставить специальный  python-пакет). Сначала подключил гугл-распознавание через http, а потом, посмотрев аналогичный проект в аналогичной книге, но по django 3, переподключил на https. При этом пришлось снести 2-ю версию django и поставить 3-ю. Выяснил, что django способен запускать https-сервер (для этого ставится некоторое количество библиотек, в том числе django-extensions). Используемая при этом команда: 
python manage.py runserver_plus --cert-file cert.crt
Также в книге описана регистрация через facebook и twitter (осталось только выяснить, как подключать пользователей сети ВК).

7 марта 2021 г.
---------------
Установил регистрацию через VK и facebook. Оказалось, что цвета кнопок определяют классы при теге 'li': 'google' - красный, 'twitter' - голубой, 'facebook' - синий (остальные сети свои цвета не выявили - при упоминании их в классе они оказываются бесцветными, поэтому для того же vk пришлось установить класс 'twitter'). 

8 марта 2021 г.
---------------
Продолжил выполнять проект № 2 (приступил к реализации букмарклета - программы на js, которая позволяет делать закладки в браузере).

9-10 марта 2021 г.
------------------
Функция букмарклета не срабатывает - даже тестировал код автора на работоспособность, и все равно ничего не происходит (js-файл, инициирующий запуск другого js-файла с основной функцией, этот самый другой файл не запускает, хотя иконка устанавливается в качестве закладки на панель браузера). Решил пропустить этот аспект функционала и двигаться дальше - реализовывать "лайки" с использованием ajax.

11-12 марта 2021 г.
-------------------
Букмарклет все же заработал, но как-то не сразу и для этого пришлось погуглить решение (оказалось, что эта проблема возникала не только у меня). Сработавшее решение заключалось в том, чтобы вставить js-код из файла, запускающего функцию букмарклета, непосредственно в html-файл. Кроме того, не все файлы отдавали свои фотографии, и не все фото сохранялись из-за проблем создания слага (если в названии файла фото была запятая или другой знак, не поддерживаемый слагом, вылезала ошибка). Потом стало понятно, что надо использовать англоязычные ресурсы, где запятых в названиях фотографиях не ставят. 
Перехожу к выполнению очередной, 6-й главы Djagno 2(3) by example.

13-19 марта 2021 г.
-------------------
Отдыхал до сегодняшнего дня. Снова взялся за Django 2 by example.

20 марта 2021 г.
----------------
Немного продвинулся по 6-й главе: сделал страницу со списком пользователей и личную страницу пользователя.

21 марта 2021 г.
----------------
Приступил к отладке проекта № 2 (социальная сеть). На ноуте нестабильно работает новостная лента и не работает ранжирование фото по числу просмотров. Думаю, это виновата sqlite3. Поэтому через битбакет (почему-то на WSL2 нет доступа по ssh, пришлось делать это через https) клонировал репо на большой комп, прикрутил postgres и redis (записал в dbms_notes как это делать). Букмарклет работает и количество лайков и просмотров считаются. Но работу новостной ленты на postgresql еще не тестировал. 
Вчера на hh.ru увидел вакансию разработчиков на django (Питер, удаленка, 60-80, микросервисы) с условием выполнения "небольшого тестового задания". Откликнулся, написал им письмо (не столько интересует возможность подзаработать, сколько заинтересовало это самое задание). Посмотрим, возможно, и откликнутся парни. 
Да, проблему с битбакетом все же удалось решить. Вводим следующие команды в терминале (интересно, почему я раньше вполне без этого обходился, и ssh-доступ был):
1. eval $(ssh-agent) - запускаем ssh-агент и получаем ответ "Agent pid <какой-то номер>"
2. ssh-add ~/.ssh/<ключ> - добавляем по этому пути наш ключ и получаем ответ "Identity added: /root/.ssh/<ключ> (/root/.ssh/<ключ>)". И заработало - клонирование через ssh удалось!

22 марта 2021 г.
----------------
Сайт с соцсетью даже с postgresql и redis (не знаю, может, проблема только в последней) работает нестабильно - уведомления в новостной ленте стали пропадать, причем у одних участников они появляются, у других - нет. Проблему с базовым аватаром удалось решить (подсмотрел, как это делается в другом проекте в 7-й главе). 
Да, приступил к изучению нового проекта - интернет-магазина (он начинается в этой самой 7-й главе).
Битбакет опять задает проблем - как оказалось, все эти команды надо вводить чуть ли не при каждом запуске компа. Думаю написать скрипт и заалиасить его в конфиг.

23 марта 2021 г.
----------------
Продолжил работу с проектом № 3 из "Django 2 (код беру из 3) by example": сделаны html-шаблоны списка и деталей товаров, а также контроллер-функция обработки корзины.
Ключ к bb заалиасил.

24-30 марта 2021 г.
-------------------
Отдыхал до сегодняшнего дня. Планирую продолжить (хотя бы просто просмотреть) работу по Django 2 by example.

31 марта 2021 г.
----------------
Закончил в вышеуказанном проекте приложение orders. Приступаю к приложению payment.

1 апреля 2021 г.
----------------
Сделал приложение payment и частично coupons. Осталось совсем мало поработать в этом проекте. Думаю разместить его в сети (для чего арендовать хостинг и домен). Хорошо бы сделать это на docker, но никак не пойму, как подключать в docker-compose celery и rabbitmq. 

4 апреля 2021 г.
----------------
Планы резко изменились. Ковал железо, пока было горячо. Три дня занимался написанием статьи в совместный проект СамГУПС-СГЭУ - какой-то научный сборник, который обещают проиндексировать в системе Scopus. Сегодня закончил, полистаю книгу Аллана Б. Дауни "Основы Python. Научитесь думать как программист" ("Think Python").  

5 апреля 2021 г.
----------------
Пираты выложили курс по анализу данных на Python от Webformyslelf. Начал с интересом изучать - узнал много нового о горячих клавишах и магических методах в Jupyter notebook. Поставил Anaconda на WSL2. Кажется, что я отдаляюсь от Django. Но это только кажется.

6 апреля 2021 г.
----------------
Продолжил изучение курса по анализу данных. Курс достойный, требует хотя бы самого краткого конспектирования.

30 апреля 2021 г.
-----------------
После продолжительного застоя, во время которого случились, в основном, события грустные, я решил возвратиться к изучению python и django. Надеюсь, это у меня получится.

1 мая 2021 г.
-------------
Посмотрел источник незаконченного проекта (магазина). Оказалось, надо сделать лишь систему рекомендаций (кода не много). Думаю, после этого надо проект клонировать и русифицировать, а далее задеплоить и выставить в качестве своих достижений. Начал также просматривать первый из проектов книги - блог (наконец-то, достаточно четко уяснил путь отравки get-запроса от ссылки на веб-странице (по сути, шаблоне) до обработчика с использованием метода модели get_absolute_url).

2 мая 2021 г.
-------------
Решил действовать иначе. Заново начал изучение книги "Django 2(или 3) for examples", чтобы вдумчиво отработать все основные моменты и нюансы, и в итоге прийти к осознанному программированию веб-приложений. Сегодня изучил 1-ю главу (по идее, самую легкую - это значит, что на другие главы будет уходить по несколько дней). Время есть. Главное, чтобы был полезный результат.

3 мая 2021 г.
-------------
Прошел вторую главу: 1) создание форм для отправки эл.писем со ссылками на статьи, 2) публикация комментов, 3) введение тэгов для статей и отбор статей с одинаковыми тэгами. Код понятен.

4 мая 2021 г.
-------------
Сделал третью главу: собственные теги и фильтры, карта сайта, полнотекстовый поиск. Начал разбираться с "Python Data Cleaning Cookbook" - классная книга, в ней столько интересных способов работы с данными, что аж полный вперед)) И, что в помощь, набивать самостоятельно ничего не нужно: форкнул ее репозиторий с гитхаба и теперь разбираюсь с кодом. 

5 мая 2021 г.
-------------
Выполнил 4-ю главу, но с оговорками: не стал реализовывать вариант регистрации на сайте через соцсети (в прошлый раз сделал это достаточно легко, и речь там идет, в основном, об API соцсетей, а не о сайте). Изучил способы аутентификации и авторизации (логин-разлогин, смена, сброс и восстановление пароля) через классы-обработчики, а также регистрацию новых пользователей через создание функции-обработчика. Рассмотрел способ расширения модели пользователя через создание модели профиля пользователя. Очень полезной темой оказалось подключение системы уведомлений.

6 мая 2021 г.
-------------
Сделал часть 5-й главы (той, где речь о bookmarklet и ajax). Думаю, как здесь быть с js - как бы не потонуть в этих дебрях и не сойти с генеральной линии.

7 мая 2021 г.
-------------
Закончил 5-ю главу и перешел к 6-й. Букмарклет реализовал путем копипаста js-кода, но описание логики кода прочитал внимательно (даже воспроизвел код декоратора, разрешающего отправлять исключительно ajax-запросы).

8 мая 2021 г.
-------------
Практически окончил 6-ю главу и, соответственнно, приложение по созданию соцсети с букмарклетом. Как и в прошлый раз лента новостей барахлит, а букмарклет не хочет принимать названия из русских букв (видимо, не может формировать из них слаги). Осталось внедрить redis и посадить все это на docker.

9 мая 2021 г.
-------------
Посмотрел курс от skillbox по bash. Из интересного - создание бэкапов БД и настройка серверов Apache и Nginx. Внедрил redis в соцсеть и на том закончил 6-ю главу (вроде все работает, хотя и местами нестабильно - лента новостей выдает новости весьма произвольно). Начал 7-ю главу - создание интернет-магазина. Проект назвал shop2021.

10 мая 2021 г.
--------------
Немного поработал над главой 7. Прослушал две лекции от mail.ru (Игорь Смаль) по курсу "Web-технологии". Удалось создать на основе Dockerfile образ ubuntu + vim + python3.8.5 + pip3. Собрал этот образ и понял, что толку в нем мало: это никак не решает проблемы синхронного запуска django + postgresql + redis + rabbitmq + celery. Значит, надо двигаться в сторону docker-compose, что и делают многие разработчики (судя по статьям в сети). Но написать такой docker-compose.yml - это, думается мне, целое искусство.

