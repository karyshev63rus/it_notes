Notes
=====

26 декабря 2020 г.
------------------
Продолжается изучение PostgreSQL. Требования к СУБД в плане проведения транзакций (ACID) - атомарность, согласованность, изолированность, долговечность (надежность).
Начинается ознакомление с "Приложением 12 факторов" - требованиями к разработке и развертыванию современого программного софта в виде веб-приложений:
I. Кодовая база: одна кодовая база, отслеживаемая системой контроля версий, и множество развертываний; 
II. Зависимости: явно объявляйте и изолируйте зависимости;
III. Конфигурация: сохраняйте конфигурацию в среде выполнения;
IV. Сторонние службы: считайте сторонные службы подключаемыми ресурсами;
V. Сборка, релиз, выполнение: строго разграничивайте сборку и выполнение;
VI. Процессы: запускайте приложение как один или несколько процессов не сохраняющих внутреннее состояние;

27 декабря 2020 г.
------------------
Еще три фактора 12-факторного приложения:
VII. Привязка портов: экспортируйте сервисы через привязку портов;
VIII. Параллелизм: масштабируйте приложение с помощью процессов;
XI. Утилизируемость: максимизируйте надежность с помощью быстрого запуска и корректного завершения работы;
Масштабируемость - способность системы, сети или процесса реагировать на изменение рабочей нагрузки; регулировать степень использования ресурсов (запускать новые или останавливать работающие процессы) в зависимости от поступления новых задач;
Запустил на linux приложение на основе  Dockerfile и docker-compose; на винде установил подсистему Ubuntu20.04 и также запустил приложение, собрав образ из докер-файла. Пробросил порты и открыл в браузере на хост-машине.

28 декабря 2020 г.
------------------
Последние три фактора из Приложения 12-ти факторов:
X. Паритет разработки/работы приложения: держите окружение разработки, промежуточного развертывания и рабочего развертывания максимально похожими;
XI. Журналирование: рассматривайте журнал как поток событий;
XII. Задачи администрирования: выполняйте задачи администрирования/управления с помощью разовых процессов
Пытался запустить контейнер с приложением (отключенным от SQLite3) совместно с контейнером на основе Postgresql путем сборки на основе файла docker-compose.yml - не получилось. Но получилось просто запустить приложение с подключением его к PG (для чего специально создал postgres-базу данных).
UPD. Запустить удалось, прописав в docker-compose файле две строки (под строкой image: postgresql:12 и с тем же отступом - нашел их в репо книги на гитхабе):
    enviroment:
    - "POSTGRES_HOST_AUTH_METHOD=trust"

29 декабря 2020 г.
------------------
Продолжаю изучать книгу Django for professionals. Освоил 3-ю главу, где создается кастомная модель пользователя (правда, пока непонятно, зачем она нужна): пока это привело только к изменению внешнего вида административной страницы сайта. Пробовал поставить chrome на ubuntu-подсистему винды; не удалось, но зато выяснил, как решать проблемы с недопоставившимися пакетами (см. в  файле linux_notes).

30 декабря 2020 г.
------------------
Освоил 4-ю и 5-ю главы книги (посвящены шаблонам, тестированию, входу-выходу и регистрации). Удобно работать с запушенным в фоне docker-compose: командой docker-compose exec web python manage.py tests users можно запускать тесты  конкретно приложения test без остановки запущенных контейнеров.
О проблеме подключения контейнера с  django к базе данных postgres на локальном сервере (тот, что запускается с pgAdmin4): подключить удается только тот контейнер, что создан в "правильной" виндовской среде (через cmd-консоль); контейнер, созданный в линуксовском окружении, не подлючается (через команду ps aux даже не  выявляются процессы с названием, включающим 'postgres').

31 декабря 2020 г.
------------------
Изучил еще две главы: 6 и 7 - про подключение статистических файлов и кастомную регистрацию, соответственно. Не обошлось без bootstrap4 (изучение этого фреймворка еще впереди - уже скачан нужный курс от WebForMyself).

1 января 2021 г.
----------------
Изучил главы 8, 9 и 10: соответственно, о переменных окружения, настройке почты и об использовании UUID в качестве первичного ключа. Переменные поключил сначала через опцию "- environment" в файле docker-compose, а затем через dotenv (привет Devman). Для почты использовал второй gmail-овский ящик. При использовании UUID в качестве первичного ключа надо было снести БД - снес и восстановил.

2 января 2021 г.
----------------
Прошел три главы: 11-ю - создание приложения для публикации комментов (интересно реализацией внешних ключей); 12-ю - о загрузке на сайт файлов (в т.ч. изображений) через админку; 13-ю - введение разграничений прав пользователей (здесь все вроде бы получилось - сайт работает как надо - но тесты (2 из 4 по данному приложению) не проходят(запуска код автора, то же самое)).

3 января 2021 г.
----------------
Просмотрел три последних занятия (из четвертой части) базового курса по python от OTUS (вел Сурен). Речь шла о CI/CD на основе Gitlab (особо не вникал). Зарегистрировался в почтовом сервисе Mailgun (mailgun.com) - можно будет его использовать после деплоя (т.к. для работы сервиса требуется указать домен).

4 января 2021 г.
----------------
Изучил еще две главы: 14-ю - она посвящена подключению платежной системы Stripe (поначалу подключиться не удавалось - вываливался аллерт о том, что API ключ is invalid. Потому вдруг сервис подключился, почему именно, точно не ясно); 15-ю - о добавлении функции поиска по сайту. Да. Впервые за последние несколько месяцев достал гг - думаю, продолжу освоение ирландщины.


5 января 2021 г.
----------------
Освоил главу 16, посвященную проблемам производительности приложения и отладке с помощью debug_toolbar, а также кешированию и применению индексов к БД. Поставил струны на гитару и заказал в Перми комбик fender frontman 25r.

6 января 2021 г.
----------------
Справился с главой 17, основной проблемой стало то, что вдруг поерестала открываться страница сайта при перезапусках двух версий приложения (соответственно, на основе docker-compose.yml и docker-compose-prod.yml) - долго не мог понять причину, оказалось дело в схеме http:// https:// - когда запускал контейнер на основе https (здесь страница, разумеется, не открывалась), последующий запуск контейнера на основе http не приводил к автоматической смене схемы (т.е. я пытался открыть http по схеме https - в логах об этом было ясно сказано: "You're accessing the development server over HTTPS, but it only supports HTTP", но все равно не мог понять, что имеется в виду). В итоге разобрался и в docker-compose.yml заменил внешний порт на 8008, поскольку порт в строке виден всегда, в отличие от варианта схемы.
Начал главу 18, где речь идет о развертывании сайта на удаленном сервере (здесь, как и в книге для beginners, используется Heroku). Из виндовской убунты достучаться до heroku не получилось (и вряд ли это возможно, да и зачем), поэтому буду развертывать в оболочке командной строки хостовой машины (т.е. в cmd; уже копирнул код из  /home в /mnt/d/...).

7 января 2021 г.
----------------
Произвел деплой проекта на сервер Heroku (и не один раз). Чувства смешанные: во-первых, как оказалось, данные из локальной БД в БД на сервере автоматически не переносятся (но вроде бы, их можно копировать, правда пока непонятно как); во-вторых, есть проблемы с картинками - их не удается ни залить через админку, ни взять из media/covers (где лежат обложки книг); в-третьих, не срабатывает уровень доступа по условию оплаты (конкретно: доступ к книжкам открывается, а зеленая кнопка 'Purchase All Books' не исчезает, так что книжки можно прикупить еще не раз))). Буду разбираться, тем более, что последняя проблема есть и на локальной версии сайта - там не проходят тесты и исчезновение кнопки срабатывает с опозданием (но срабатывает). 
Да, еще не отправляется почтовое сообщение при регистрации нового посетителя (выдает 500-ю ошибку). Сейчас почта рассылается через gmail; надо будет подключить mailgun и там уже смотреть.

8 января 2021 г.
----------------
Начал конспектировать Django for Professionals (сделал 1-3 главы). Пробежал книжку по DRF, но не Винсента, а другую (скачал ее из группы VK); она на русском и написана доходчиво - буду осваивать параллельно с книгой Винсента.

9 января 2021 г.
----------------
Законспектировал главы с 4 по 10. В сжатом виде все намного нагляднее.

10 января 2021 г.
-----------------
Завершил конспектирование книги. Вступил в группу VK "Django_Python" для интересующихся Django (как я понял, основатель и драйвер проекта Алексей Голобурдин, посмотрел несколько его видео - проникся и задонатил за 3 переводные книги); подписался на канал "Диджитализируй!" (платформа boosty.to). Решил попрактироваться в работе с БД (причем именно через терминал), для чего установил на WSL софт Postgres и завел в репо it_notes файл для записей по СУБД (dbms_notes).

11 января 2021 г.
-----------------
Мучился с установкой Postgresql (подробнее в dbms_notes, проблемы все таки решил); случайно снес каталог run, в котором среди прочего содержатся сокет-файлы docker. 
В процессе лечения снес Docker Desktop (думал, что при его переустановки автоматом создадутся нужные файлы в wsl, но нет). В итоге переустановил саму wsl (надо было просто снять ту самую галочку Linux подсистема Windows). 
После переустановки оказалось, что нужный каталог вместе с файлами появился, а пользовательские данные остались - т.е. система восстановилась (и это радует - отделался малой кровью).
Начал просматривать русский перевод Django for begginers (интересные места собираюсь законспектировать).

12 января 2021 г.
-----------------
Создал два приложения (каждое в две страницы - одна выводит список котов, а другая - страница для каждого кота) в порядке тренировки (модель Cat). Первое приложение основано на контроллерах-классах (сложностей не вызвало, только лишь были некоторые трудности с шаблонами). Второе использует контроллеры-функции (а вот это было весьма тяжело, но теперь есть понимание, что такое Cat.objects.all() и Cat.objects.get(id=pk) плюс куда и какие параметры передавать: catslist(request) и catdetail(request, pk)).

13 января 2021 г.
-----------------
Посмотрел примерно половину курса от WebforMyself "Инструменты Front-end разработчика" - речь шла об особенностях установки и использования Notepad++, SublimeText3, Git, Chrome Devtools (наконец-то, явно осознал, зачем нужны ветки для тех, кто разрабоатывает один - для внедрения кода в эксплуацтацию и параллельной разработки дополнительного функционала).

14 января 2021 г.
-----------------
Завел еще один репо на github (github.com/karyshevm) и решал проблему переключения доступа к двум репо по ssh-ключам на одной машине без всяких перелогиниваний. В инете окончательного решения не нашел (но нашел промежуточное, которое вообще позволяет как-то переключаться), и в итоге создал два конфиг-файла (для каждого репо). Теперь через алиасы, прописанные в .bashrc, копирую нужный вариант в файл .ssh/config и все работает (загадка момента в том, что каждый из файлов содержит оба ключа, а так же тот аккаунт, к которому НЕ НАДО присоединяться!!!). 

15 января 2021 г.
-----------------
Занимался прояснением того, как следует начинать разработку проекта. Основная проблема - для варианта создания виртуальной среды (при помощи pipenv) pycharm не всегда может создать или найти соответствующий базис (папку). Думаю, это решается не в лоб, а с помощью Dockerа. Так, выяснилось, что если IDE даже и не может активировать виртуальную среду (да, именно это и есть главная проблема в pycharm) и из нее уже открыть приложение (например, запустить сервер django), то запуск на основе Dockerfile позволяет это сделать (а если подключить к этому дело docker-compose, то вопрос решается). Надо формализовать данный процесс.

16 января 2021 г.
-----------------
Решил вопрос об ssh-подключении к нескольским репо на одном компе в wsl: создал для каждого из подключений к конкретному репо свой конфигурационный файл и написал bash-скрипт, который этими переключениями управляет (сначала распознается владелец репо, потом в официальный конфиг копируется нужный вариант конфига, после чего выполняется команда git push). Повесил этот скрипт не только на push, но и fetch с pull-ом.
На канале Диджитализируй! узнал о такой классной штуке, как Tmux, и приступил к его изучению (сейчас набираю этот текст в tmux-сессии).

17 января 2021 г.
-----------------
Приступил к изучению Tmux (создал здесь файл с описанием команд, настроек и т.д.). Параллельно скачал материалы по работе с облачными провайдерами (AWS, Asure, Gitlab) - почитаю-посмотрю для создания общего представления о предмете.

18 января 2021 г.
-----------------
Закончил ознакомление с книгой о tmux. Поставил программу (по умолчанию ее не было) и гитхабовский конфиг на dell. Большинство проблем с  настройками удалось решить (например, копирование). Постараюсь использовать "Терминальный мультиплексор" как базисный инструмент для работы в командной стрoке (да, проблемы все же есть, команды vim работают несколько иначе - например, шагание по страницам комбинацией Shift+стрелки вверх-вниз здесь не поддерживается).

19 января 2021 г.
-----------------
Посмотрел вебинар (№ 3) по облачным сервисам GibLab, AWS и Azure. Начал читать книгу "Чистый код" Роберта Мартина. 

20 января 2021 г.
-----------------
Просмотрел вебинары №№ 4 и 5, а также половину 6-го)) (другой преподаватель и другой стиль ведения - 2,5 - 3 часа эфира - нагоняет тоску). Книга "Чистый код" будет интересна, в первую очередь, java-программистам - примеры в ней приведены именно на этом языке (или на C++). Главное помнить, что чистый код - это тщательно проработанный код, который хорошо читаем и обладает четкой структурой и понятной  логикой (возможно, вернусь к книге потом. Да, там говорится по некое правило Леблана - потом, значит никогда - на, да увидим...). Начал пересматривать курс по django от WebForMyself - информация воспринимается по-новому, многое понятнее и потому интереснее.

21 января 2021 г. 
-----------------
Начал читать книгу Антонио Меле "Django 2 в примерах" (русский перевод, 2019). Интересно, более сжато по сравнению с Дроновым. Продолжаю смотреть курс от WebForMyself (часть 1, 11 из 55). 

22 января 2021 г.
-----------------
Целый день потратил на то, чтобы сделать шаблон проекта на основе докера и без использования пакетов создания виртуальной среды (например, pipenv), посколь они, по сути, дублируют друг друга и привносят некоторую избыточность.
Сначала получалось - создал докер (в нем явно прописал pip install django && pip install psypg2-binary) и докер-композ файлы, на их основе запустил приложение. Но когда дошло дело до создания кастомной модели пользователя, докер начал барахлить.
В итоге прихожу к выводу, что pipenv нужен как запасной парашют на тот случай, когда что-то не запускается в докер-контейнере (и все равно есть какая-то неясность, которую я пока не могу сформилровать).

23 января 2021 г.
-----------------
Посмотрел два курса по Docker (оба на русском): от компании Слёрм и от платформы Udemy. 
Первый курс широкоаспектен (CI/CD на GitLab; сети; управление памятью и процессорным временем, которые выделяются контейнерам) и содержит множество команд (пару из них занес в алиасы), которые здесь же используются в командной строке при демонстрации примеров.
Второй курс спеацилированный (в нем рассказывается о Docker Swamp); подача материала обстоятельная, но управление кластерами нод, на которых запущены докер-контейнеры, для меня пока практического интереса не представляют (поэтому этот курс досмотрел до половины; вернусь к нему, когда возникнет потребность).
Приступаю к 3-ей главе книги "Django 2 в примерах" (речь в этой и предыдущих главах идет о создании такого веб-приложения, как блог).

24 января 2021 г.
-----------------
Прочитал 3-ю главу Примеров, законспектировал несколько уроков WFM. Параллельно решил возобновить знакомство с javascript (несколько лет назад на Stepik прошел начальный курс): скачал кое-то материалы и приступил к их изучению.

25 января 2021 г.
-----------------
Осилил 4-ю главу Примеров - здесь начинается создание социальной сети, для чего строится система аутентификации, регистрации, расширения возможностей пользовательского аккаунта за счет введения модели Profile в помощь уже существующей модели User.
Отдельно следует отметить рассмотрение регистрации через общеизвестные социальные сети (Fasebook, Twitter, Google+).
Прочел на Хабре статью от Слерм про Docker (появляется понимание, как писать код на хосте, а запускать в контейнере, не используя в качестве "стартера" файлы виртуальной среды). Законспектировал еще несколько уроков WFM (наследование html-шаблонов и создание пользовательских шаблонов, обратное разрешение интернет-адресов, статические файлы).

26 января 2021 г.
-----------------
Законспектировал еще несколько уроков WFM (формы - как основанные на моделях, так и не основанные; контроллеры-классы из django.views.generic). Посмотрел несколько уроков Д. Лаврика по JS для начинающих.

27 января 2021 г.
-----------------
Законспектировал все уроки (а их 8) по ORM Django из WFM - узнал основы и особенности обращения к бд с помощью orm-методов, а также через raw.sql()). Читаю онлайн-учебник по js от Ильи Кантора, завел здесь конспект js_notes.

28 января 2021 г.
-----------------
Законспектировал несколько уроков из WFM (отладчик debug_toolbar,  кастомизация админки, миксины, пагинация, регистрация). Продолжаю изучать js по Кантору.

29 января 2021 г.
-----------------
Досмотрел последние уроки WFM (визуальный редактор новостей в админке, капча, кэширование). Постараюсь в ближайшее время это дело законспектировать.

30 января 2021 г. 
-----------------
Отдыхал. 

31 января 2021 г.
-----------------
Читал хабр. Компания JetBrains выпустила Datalore - онлай-среду разработки на python. Удобная штука. Теперь можно не ставить Anaconda. 

1 февраля 2021 г.
-----------------
Пролистал электронный документ (оформлен как книга, но без всяких выходных данных) со слива - "[Для новичков] Python для заработка: манимейкинг, арибтраж, SEO. Реальные кейсы (2020)". Интересный текст, много примеров получения данных из сети. Есть в этих операциях (например, в проставлении лайков к комментариям постов) какой-то коммерческий смысл, надо бы разобраться.

2 февраля 2012 г.
-----------------
Закончил конспектирование курса WFM "Django. Полное руководство". Планирую приступить ко второй - практической - части курса. 

3 февраля 2021 г.
-----------------
Выполнил три первых урока части 2 из WFM (заканчивая переносом шаблона сайта в проект). Прочел 6-ю главу "Django в примерах" (окончание проекта социальной сети). Посмотрел несколько уроков по скрэпингу от Олега Молчанова. Тренируюсь делать pull requests - создал репо для проекта WFM на одном своем аккаунте и сделал форк от этого репо на другой аккаунт. 

4 февраля 2021 г.
-----------------
Работал с postgresql: в терминале создал роль, пароль, базу. Все это подключил к проекту из 2-й части WFM. Сделал миграцию, норм.

5 февраля 2021 г.
-----------------
Выполнил еще три урока (4,5,6) из WFM: создал модели, кастомизировал админку. Прочитал (бегло) 7-ю и 8-ю главы "Django в примерах" (создание онлайн-магазина). Бегло - потому, что в тексте приводится много подробностей, которые, надеюсь, еще буду изучать, когда приступлю к выполнению этих проектов.

6 февраля 2021 г.
-----------------
Отдыхал

7 февраля 2021 г.
-----------------
Видимо, так же отдыхаю. Вчера задумался о названиях коммита для этого файла: dairy или diary - конечно же, последнее правильно (его и буду использовать)

8 февраля 2021 г. 
-----------------
Отдыхал

9 февраля 2021 г.
-----------------
Скачал пару курсов: один по Flask, второй по Docker. Все еще отдыхаю, но завтра собираюсь начать восстанавливаться.

10 февраля 2021 г.
------------------
Посмотрел видео из второй части WFM по django, но изменения в код не вносил (оставлю это на потом).

11 февраля 2021 г.
------------------
Досмотрел до конца видео второй части (там чувствуется какой-то разрыв - после уроков о многоуровневых меню сразу же идут уроки о деплое). Теперь надо будет попробовать применить все это на практике (что потребует времени и принятия решения о выборе домена и хостинга; хорошо, что это не так дорого, но времени это дело отнимет значительное количество). 

12 февраля 2021 г.
------------------
Решал вопросы на работе.

13-15 февраля 2021 г.
---------------------
Самообразованием не занимался.

16 февраля 2021 г.
------------------
Выполнил уроки 7-11 из курса WFM (создание тега шаблона меню, вывод статей на главной и по категориям, пагинация).

17 февраля 2021 г.
------------------
Завершил локально (правда, без выполнения многоуровневого меню) проект WFM. Посмотрел предлагаемые в этом курсе вариант деплоя на REG.RU. Выяснил замечательную команду pipenv sync, которая снимает проблему отрыва кода приложения от его виртуальной среды. Занялся изучением деплоя на Heroku. Оказалось, что можно клонировать оттуда приложения на комп (со всеми вытекающими перспективами). Начал создавать конспект по вариантам деплоя.

18 февраля 2021 г.
------------------
Занимался изучением деплоя на heroku - как с использованием docker, так и без. Все нормально ставится и без контейнеризации. Налаживал почту на основе smpt.google.server - долго мучился, но вроде бы получилось, потом снова пошла ерунда (выдает ошибку аутентификации, а всего-то пытаюсь рассылать письма о регистрации на сайте). Ясно, что надо подключать нормальный специализированный сервер. Сделал описание подключения postgresql к django-проекту.

19 февраля 2021 г.
------------------
Начал выполнять учебный проект - онлайн-магазин по продаже соусов)) на основе книжки "Django made Easy" (Peter Vought). Как сказано на обложке, 'Build and deploy relieable Django applications, first edition'. Делу помогает то обстоятельство, что у издания есть репо на Bitbucket.
Насчет почтовых рассылок из Heroku я зря на этот сервис (а заодно и на гугл) грешил: мою рассылку периодически принимают за спам и блокируют доставку (письма на придуманные адреса, например, bob@mail.com, уходят  без проблем).

20 февраля 2021 г.
------------------
Продолжил выполнять вышеуказанный проект: создал корзину и обслуживание заказов. Подключил rabbitmq и celery (осталось лишь до конца разобраться, что это за сервисы и как они работают).

21 февраля 2021 г.
------------------
Освоил еще одну главу проекта - формирование сводных отчетов в формате .xlsx и накладных в формате .pdf. Остались две главы: приложение accounts (регистрация и логин-логаут) и деплой на ресурсах DigitalOcean. Начал изучать книгу Хорстмана "JavaScript для самых нетерпеливых" (автор позиционирует книгу в качестве учебника именно по "современному js", т.е. не тащит за собой весь багаж раннего синтаксиса и прочих "пережитков"). Думаю, это то, что мне надо. Да, на одной из картинок увидел фрагмент IDE WebStorm, и поскольку у меня имеется образовательная лицензия на продукты GB, я эту среду скачал и поставил; теперь есть более чем комфортные условия для изучения js. 

22 февраля 2021 г.
------------------
Сделал (практически) приложение по работе с аккаунтом. Было много вопросов и потраченного времени по поводу маршрутизации - джанго никак не желал находить шаблоны. И если в некоторых случаях это было объяснимо (путаница с латинскими 'q' и 'g', а также поиск страницы смены пароля на правах еще не  залогиненного пользователя), то вначале фреймворк вообще не хотел находить маршруты из специально созданных для этого (проверки маршрутов) функций-контроллеров и приложений. В итоге (благо, пока была возможность) пришлось отключить приложения в settings.py, после чего заработал маршрут проверочного приложения, а потом и другие "потерянные" маршруты.

23 февраля 2021 г. 
—-----------------
Закончил работу с кодом проекта. По идее, все работает (кроме оплаты через stripe - здесь выбрасывается исключениие по поводу invalid token). Читаю про деплой на digital ocean.

24 февраля 2021 г.
------------------
Скачал очередной курс по JavaScript - опять от Владилена Минина (того, что из WFM), но на этот раз не связанный с данной образовательной платформой. Курс посвящен разработке приложения типа excel (!?), автор обещает много интересного, в частности, написания фреймворка на основе простого js без всяких "присадок". Думаю, что пора вернуться к изучению "Django 2 в примерах" и начать с практической реализации первого проекта (это будет блог).

25 февраля 2021 г.
------------------
Смотрел на youtube-канале Владлена Минина его видео по js (общий обзорный курс продолжительностью почти 6 часов, а также часовой ролик по node.js). В очередной раз приступил к изучению ООП на python (youtube-канал selfedu - кстати, этот товарищ очень доходчиво рассказывает о django - есть у него и такой плейлист). К проекту из Примеров планирую приступить завтра.

26, 27, 28 февраля 2021 г.
--------------------------
Начал проект по созданию блога из "Django 2 в примерах", изучил и законспектировал в коде  4 (из 14) видеоурока по ООП на python. Отдохнул.

1 марта 2021 г.
---------------
Отдыхал. Чувствую, что теряю темп обучения. Интерес по-прежнему присутствует, но внешние раздражители...

2 марта 2021 г.
---------------
Посмотрел несколько видео по ООП от selfedu (5-7 из 14). Прошел по ссылке на сайт (я так понимаю, что его же сайт - proproprogs.ru). Там интересные материалы по python, javascript и ИИ.

3 марта 2021 г.
---------------
Законспектировал видеоуроки №№ 5-8 по ООП на python. Сложно, но интересно.

4 марта 2021 г.
---------------
Работал над проектом № 1 из книги 'Django 2 by Example': сделал пагинацию, возможность рекомендовать пост по почте, комментировать пост, теги, карту сайта, RSS, полнотекстовый поиск, подключил postgresql.  Практически закончил (остался стемминг (?) и ранжирование результатов). Коммитил в две ветки - сначала в features, затем в master. Битбакет ведет себя несколько отлично от Гитхаба - удаленный репо почему-то не хочет прибавляться к локальному репо, если в последнем уже что-то есть (т.е. прибавляется, но push/pull не идут). Т.е. работает только  клонирование, либо git remore add origin ... в случае пустого локального репо.

5 марта 2021 г.
---------------
Закончил учебный проект № 1 (блог) и приступил к проекту № 2 (социальная сеть). Возникают проблемы с маршрутами: вместо одного из кастомных маршрутов вылезает предустановленный (по адресу password_change). Это происходит несмотря на выполнение рекомендаций автора книги: ставить приложение account выше приложения admin. Просмотрел до конца серию видео по ООП от selfedu - есть интересные аспекты, такие как объясление особенностей методов @classmethod и @staticmethod; узнал, что такое "функторы" (классы, используемые как функции), уяснил понятие полиморфизма (работа с различными объектами на основе одного и того же метода - в качестве примера говорится о методах подсчета длины периметра для разных геометрических фигур: методы называются одинаково, но применяемые формулы расчета различаются).

6 марта 2021 г.
---------------
В рамках проекта № 2 выполнил аутентификацию (login) через указание вместо имени пользователя его почтового адреса. Кроме того, наладил регистрацию через аккаунт google (для регистрации через сети надо ставить специальный  python-пакет). Сначала подключил гугл-распознавание через http, а потом, посмотрев аналогичный проект в аналогичной книге, но по django 3, переподключил на https. При этом пришлось снести 2-ю версию django и поставить 3-ю. Выяснил, что django способен запускать https-сервер (для этого ставится некоторое количество библиотек, в том числе django-extensions). Используемая при этом команда: 
python manage.py runserver_plus --cert-file cert.crt
Также в книге описана регистрация через facebook и twitter (осталось только выяснить, как подключать пользователей сети ВК).

7 марта 2021 г.
---------------
Установил регистрацию через VK и facebook. Оказалось, что цвета кнопок определяют классы при теге 'li': 'google' - красный, 'twitter' - голубой, 'facebook' - синий (остальные сети свои цвета не выявили - при упоминании их в классе они оказываются бесцветными, поэтому для того же vk пришлось установить класс 'twitter'). 

8 марта 2021 г.
---------------
Продолжил выполнять проект № 2 (приступил к реализации букмарклета - программы на js, которая позволяет делать закладки в браузере).

9-10 марта 2021 г.
------------------
Функция букмарклета не срабатывает - даже тестировал код автора на работоспособность, и все равно ничего не происходит (js-файл, инициирующий запуск другого js-файла с основной функцией, этот самый другой файл не запускает, хотя иконка устанавливается в качестве закладки на панель браузера). Решил пропустить этот аспект функционала и двигаться дальше - реализовывать "лайки" с использованием ajax.

11-12 марта 2021 г.
-------------------
Букмарклет все же заработал, но как-то не сразу и для этого пришлось погуглить решение (оказалось, что эта проблема возникала не только у меня). Сработавшее решение заключалось в том, чтобы вставить js-код из файла, запускающего функцию букмарклета, непосредственно в html-файл. Кроме того, не все файлы отдавали свои фотографии, и не все фото сохранялись из-за проблем создания слага (если в названии файла фото была запятая или другой знак, не поддерживаемый слагом, вылезала ошибка). Потом стало понятно, что надо использовать англоязычные ресурсы, где запятых в названиях фотографиях не ставят. 
Перехожу к выполнению очередной, 6-й главы Djagno 2(3) by example.

13-19 марта 2021 г.
-------------------
Отдыхал до сегодняшнего дня. Снова взялся за Django 2 by example.

20 марта 2021 г.
----------------
Немного продвинулся по 6-й главе: сделал страницу со списком пользователей и личную страницу пользователя.

21 марта 2021 г.
----------------
Приступил к отладке проекта № 2 (социальная сеть). На ноуте нестабильно работает новостная лента и не работает ранжирование фото по числу просмотров. Думаю, это виновата sqlite3. Поэтому через битбакет (почему-то на WSL2 нет доступа по ssh, пришлось делать это через https) клонировал репо на большой комп, прикрутил postgres и redis (записал в dbms_notes как это делать). Букмарклет работает и количество лайков и просмотров считаются. Но работу новостной ленты на postgresql еще не тестировал. 
Вчера на hh.ru увидел вакансию разработчиков на django (Питер, удаленка, 60-80, микросервисы) с условием выполнения "небольшого тестового задания". Откликнулся, написал им письмо (не столько интересует возможность подзаработать, сколько заинтересовало это самое задание). Посмотрим, возможно, и откликнутся парни. 
Да, проблему с битбакетом все же удалось решить. Вводим следующие команды в терминале (интересно, почему я раньше вполне без этого обходился, и ssh-доступ был):
1. eval $(ssh-agent) - запускаем ssh-агент и получаем ответ "Agent pid <какой-то номер>"
2. ssh-add ~/.ssh/<ключ> - добавляем по этому пути наш ключ и получаем ответ "Identity added: /root/.ssh/<ключ> (/root/.ssh/<ключ>)". И заработало - клонирование через ssh удалось!

22 марта 2021 г.
----------------
Сайт с соцсетью даже с postgresql и redis (не знаю, может, проблема только в последней) работает нестабильно - уведомления в новостной ленте стали пропадать, причем у одних участников они появляются, у других - нет. Проблему с базовым аватаром удалось решить (подсмотрел, как это делается в другом проекте в 7-й главе). 
Да, приступил к изучению нового проекта - интернет-магазина (он начинается в этой самой 7-й главе).
Битбакет опять задает проблем - как оказалось, все эти команды надо вводить чуть ли не при каждом запуске компа. Думаю написать скрипт и заалиасить его в конфиг.

23 марта 2021 г.
----------------
Продолжил работу с проектом № 3 из "Django 2 (код беру из 3) by example": сделаны html-шаблоны списка и деталей товаров, а также контроллер-функция обработки корзины.
Ключ к bb заалиасил.

24-30 марта 2021 г.
-------------------
Отдыхал до сегодняшнего дня. Планирую продолжить (хотя бы просто просмотреть) работу по Django 2 by example.

31 марта 2021 г.
----------------
Закончил в вышеуказанном проекте приложение orders. Приступаю к приложению payment.

1 апреля 2021 г.
----------------
Сделал приложение payment и частично coupons. Осталось совсем мало поработать в этом проекте. Думаю разместить его в сети (для чего арендовать хостинг и домен). Хорошо бы сделать это на docker, но никак не пойму, как подключать в docker-compose celery и rabbitmq. 

4 апреля 2021 г.
----------------
Планы резко изменились. Ковал железо, пока было горячо. Три дня занимался написанием статьи в совместный проект СамГУПС-СГЭУ - какой-то научный сборник, который обещают проиндексировать в системе Scopus. Сегодня закончил, полистаю книгу Аллана Б. Дауни "Основы Python. Научитесь думать как программист" ("Think Python").  

5 апреля 2021 г.
----------------
Пираты выложили курс по анализу данных на Python от Webformyslelf. Начал с интересом изучать - узнал много нового о горячих клавишах и магических методах в Jupyter notebook. Поставил Anaconda на WSL2. Кажется, что я отдаляюсь от Django. Но это только кажется.

6 апреля 2021 г.
----------------
Продолжил изучение курса по анализу данных. Курс достойный, требует хотя бы самого краткого конспектирования.

30 апреля 2021 г.
-----------------
После продолжительного застоя, во время которого случились, в основном, события грустные, я решил возвратиться к изучению python и django. Надеюсь, это у меня получится.

1 мая 2021 г.
-------------
Посмотрел источник незаконченного проекта (магазина). Оказалось, надо сделать лишь систему рекомендаций (кода не много). Думаю, после этого надо проект клонировать и русифицировать, а далее задеплоить и выставить в качестве своих достижений. Начал также просматривать первый из проектов книги - блог (наконец-то, достаточно четко уяснил путь отравки get-запроса от ссылки на веб-странице (по сути, шаблоне) до обработчика с использованием метода модели get_absolute_url).

2 мая 2021 г.
-------------
Решил действовать иначе. Заново начал изучение книги "Django 2(или 3) for examples", чтобы вдумчиво отработать все основные моменты и нюансы, и в итоге прийти к осознанному программированию веб-приложений. Сегодня изучил 1-ю главу (по идее, самую легкую - это значит, что на другие главы будет уходить по несколько дней). Время есть. Главное, чтобы был полезный результат.

3 мая 2021 г.
-------------
Прошел вторую главу: 1) создание форм для отправки эл.писем со ссылками на статьи, 2) публикация комментов, 3) введение тэгов для статей и отбор статей с одинаковыми тэгами. Код понятен.

4 мая 2021 г.
-------------
Сделал третью главу: собственные теги и фильтры, карта сайта, полнотекстовый поиск. Начал разбираться с "Python Data Cleaning Cookbook" - классная книга, в ней столько интересных способов работы с данными, что аж полный вперед)) И, что в помощь, набивать самостоятельно ничего не нужно: форкнул ее репозиторий с гитхаба и теперь разбираюсь с кодом. 

5 мая 2021 г.
-------------
Выполнил 4-ю главу, но с оговорками: не стал реализовывать вариант регистрации на сайте через соцсети (в прошлый раз сделал это достаточно легко, и речь там идет, в основном, об API соцсетей, а не о сайте). Изучил способы аутентификации и авторизации (логин-разлогин, смена, сброс и восстановление пароля) через классы-обработчики, а также регистрацию новых пользователей через создание функции-обработчика. Рассмотрел способ расширения модели пользователя через создание модели профиля пользователя. Очень полезной темой оказалось подключение системы уведомлений.

6 мая 2021 г.
-------------
Сделал часть 5-й главы (той, где речь о bookmarklet и ajax). Думаю, как здесь быть с js - как бы не потонуть в этих дебрях и не сойти с генеральной линии.

7 мая 2021 г.
-------------
Закончил 5-ю главу и перешел к 6-й. Букмарклет реализовал путем копипаста js-кода, но описание логики кода прочитал внимательно (даже воспроизвел код декоратора, разрешающего отправлять исключительно ajax-запросы).

8 мая 2021 г.
-------------
Практически окончил 6-ю главу и, соответственнно, приложение по созданию соцсети с букмарклетом. Как и в прошлый раз лента новостей барахлит, а букмарклет не хочет принимать названия из русских букв (видимо, не может формировать из них слаги). Осталось внедрить redis и посадить все это на docker.

9 мая 2021 г.
-------------
Посмотрел курс от skillbox по bash. Из интересного - создание бэкапов БД и настройка серверов Apache и Nginx. Внедрил redis в соцсеть и на том закончил 6-ю главу (вроде все работает, хотя и местами нестабильно - лента новостей выдает новости весьма произвольно). Начал 7-ю главу - создание интернет-магазина. Проект назвал shop2021.

10 мая 2021 г.
--------------
Немного поработал над главой 7. Прослушал две лекции от mail.ru (Игорь Смаль) по курсу "Web-технологии". Удалось создать на основе Dockerfile образ ubuntu + vim + python3.8.5 + pip3. Собрал этот образ и понял, что толку в нем мало: это никак не решает проблемы синхронного запуска django + postgresql + redis + rabbitmq + celery. Значит, надо двигаться в сторону docker-compose, что и делают многие разработчики (судя по статьям в сети). Но написать такой docker-compose.yml - это, думается мне, целое искусство.

11 мая 2021 г.
--------------
Сделал еще небольшую часть главы 7 - работа с корзиной. Нашел определение понятия "контекст" в констексте ИТ. Констекст - объект, предоставляющий доступ к базовым функциям приложения (доступ к ресурсам, базе данных, вызов активности и т.д.). Посмотрел очередную (№ 4) лекцию от Смаля - по серверному программированию. UPD: еще одно определение контекста - это словарь, в котором можно брать значение для шаблона по ключу. Действительно, если в обработчике, например, return ...{'ip_address': ip}; значит, в шаблоне будет что-то вроде {{ ip_address }}.

12 мая 2021 г.
--------------
Смотрел материалы от Skillbox по django, верстке и git. Слушал лекцию от mail.ru (№ 5 - посвящена реляционным БД). По главе 7 не работал.

13 мая 2021 г.
--------------
Вспомнил git, просмотрев ряд видео от Skillbox. Продолжил главу 7. Здесь ошибся с моделью (внес не все поля), из-за этого приложение отказалось работать. Снес дефектные таблицы и попытался создать новые - не создаются. Пытаюсь снести БД, но тоже что-то не идет. Думаю, что делать.

14 мая 2021 г.
--------------
БД снес на правах супера postgres. Воспользовался случаем и попытался перевести все на docker. Создал два Dockerfile: один для приложения (web), а другой - для БД (db), далее создал docker-file и рядом расположил файл init.sh с кодом для создания самой базы, ее пользователя и его пароля. Так что удалось создать в докере БД и подключиться к ней - однако на условиях "POSTGRES_HOST_AUTH_METHOD=trust", т.е. без использования пароля (с паролем она коннектиться не желает). Таким образом, я недалеко ушел от достижений времен "Django for professionals". Да, в случае с docker значение HOST будет не "localhost", a "db". Далее пытаюсь включить в состав сервисов docker-compose еще два компонента: rabbitmq и celery. Пока с непоняным результатом - образы и контейнеры web и db, а также rabbitmq собираются, но далее идет что-то ошибкой 127. Буду разбираться.  

15 мая 2021 г.
--------------
Удалось запустить docker-compose без явных ошибок (т.е. он запускает сервер и позволяет работать над проектом). Но попытки пробиться наружу (оформить заказ через платежную систему) неудачны - браузер куда-то стучится, но без результата. При запуске же обычным (т.е. без docker) способом все в порядке - заказ оформляется и письмо с уведомлением на почту приходит (при этом используются и celery, и rabbitmq). Да, в случае с докером celery не может подключиться к rabbit. Буду думать, возможно придется вместо кролика попробовать redis. Но сдается мне, что это проблема общая и заключается в особенностях связи докера и внешнего мира (хоста). 

16 мая 2021 г.
--------------
Закончил главу 8 (создание csv- и pdf-файлов на стороне админки и прочее) и перешел к главе 9 (создание купонов и прочее). Нашел в телеграмме и читаю очередную книгу по bash (Илья Шпигорь, "Программирование на Bash с нуля"). Возможно, наконец-то освою создание bash-скриптов на сколько-нибудь серьезном уровне. Да, приложение на docker-compose в синхронном режиме работает стабильно: сначала удалось отправить почту через консоль (с помощью функции send_mail), а потом оформить заказ с оплатой через braintree и отправкой письма. Значит, дело в асинхронщине - при запуске в асинхронном режиме вылезает сообщение о том, что celery не может найти кролика по такому-то порту. Буду этот трабл фиксить.

17 мая 2021  г.
---------------
Продолжаю работаться над главой 9. Остались интернационализация с локализацией и рекомендательная система. Языки делать, наверное, не буду - дэсктоп произвольно вырубается при открытой pycharm (комп не выдерживает нагрузок, которые ему создает IDE и сам проект, для которого, кстати, еще не все команды можно выполнить при установленной версии WSL). Возможно, попробую выполнить это на ноуте. Рекомендательную систему настроен все таки реализовать. Читаю книгу про bash. 

18 мая 2021 г.
--------------
Запутался в работе с ветками: при переключении не вижу изменений (наверное, не так как надо делаю коммиты). Поэтому работаю в основной ветке. Сделал (частично) интернационализацию сайта (en, ru). Получилось весьма коряво - часть слов на одном языке, часть - на другом. Конспектировал главы книги про bash в специально созданный файл bash_notes (много новой полезной инфы). 

19 мая 2021 г.
--------------
Сделал 9-ю главу полностью (включая интернационализацию и рекомендательную систему). Удивительно, но все работает. Конспектирую книгу по Bash.

20 мая 2021 г.
--------------
Начал главу 10. Этот четвертый, последний проект книги посвящен созданию образовательной платформы. Я назвал проект edu2021. Здесь при разработке собственного поля модели и его добавления удалось достаточно подробно рассмотреть череду сообщений django с предложениями вариантов встраивания нового поля в модель (описание добавил в django_notes). Это серьезный вопрос - в прошлый раз, когда возникла такая проблема, мне пришлось сносить всю БД. 

21 мая 2021 г.
--------------
Решил ненадолго переключиться с Django на другие технологии. Посмотрел видео по основам html/css (кое-что вспомнил, что-то узнал новое). Выяснил, как устанавливать пароль для пользователя postgres - супера БД Postgresql (об этом в db_notes). Закончил конспектирование книги про Bash.

22 мая 2021 г.
--------------
Закончил 10-ю главу книги Django 2/3 for examples. Пытаюсь запустить для приложения shop2021 docker-compose со всеми сервисами, но безуспешно. Нашел один проект, где все запускается, он он на Redis (и кроме того, есть подозрение, что django начинает создавать свои таблицы именно в этой БД, что неприемлемо).

23 мая 2021 г.
--------------
Закончил главу 11. Узнал, что кэширование бывает на низком уровне - например, отдельных запросов. Далее идут, в порядке возрастания охвата, кэширование на уровне обработчиков, шаблонов (веб-страниц) и сайта в целом. Да, панель индикации кэширования (что конкретно она отображает, я так и не понял) в админке изначально красная - подозреваю, что сайту не удалось подключиться к Memcached.

24 мая 2021 г.
--------------
Поскольку глава 12 книги Django 2 by examples посвящена API и Django Rest Framework (DRF), то решил сначала прочитать базовую книжку - Django for API's от Винсента. Выяснил, что API - это, на практике, просто набор конечных точек (endpoints), т.е. url-адресов, обращаясь к которым с использованием api-методов (основанных на командах http),можно получить доступ к информации/ресурсам приложения с целью выполнения на этими ресурсами операций из набора CRUD (create, read, update, delete - им, понятно, соответствуют такие методы http как post, get, put, delete). Скачал очередной курс по анализу данных - на этот раз от Udemy (называется как-то так: "от азов до автоматизации" и охватывает традиционный стэк библиотек: numpy, pandas, matplotlib); посмотрел пару видео - подача на уровне.

25 мая 2021 г. 
--------------
Закончил читать книгу Django for API's и приступил к реализации кода. Всего там три проекта: два простых (библиотечный каталог и взаимодействие фронт- и бэкенда) и  один сложнее - блог со всеми делами (CRUD, регистрация, логин-разлогин и др.). Проекты попроще я сделал. Особый интерес вызвал второй из них - впечатляет, как просто и наглядно реализуется соединение фронтенда (React) и бэкенда (Django). В этой связи я качнул пару курсов по React (из введения к ним узнал, что это, вроде как, самая популярная библиотеке js в плане web-разработки. Понятно, что реклама, но простота и, даже более, прозрачность взаимодействия подвигает на изучение этой библиотеки).

26 мая 2021 г.
--------------
Закончил разбор (и проработку кода) книги Django for API's (интерес вызвала возможность заменять отдельные обработчики наборами - Viewsets, а маршруты - единым классом Routers; плюс замечательный инструмент для документирования rest API - это Swagger). Перехожу к изучению 12-й главы Django 2/3 by examples.

27 мая 2021 г.
--------------
Читал главу 12 и даже начинал книгу (про создание api) из группы Django beginners (ВК). Надо признаться, что про api лучше (по крайней мере, доходчивее и понятнее) написано у Винсента. Продолжаю неспешно изучать React - смотрю видео (одни и те же раза по два-три).

28 мая 2021 г.
--------------
Просмативал записи в заметках о курсе WebForMyself - о механизме перехода между страницами (изначально собирался посмотреть способы работы с БД через ОРМ). Далее реализовывал API в проекте edu2021, и здесь оказалось, что он работает, мягко говоря, не так, как надо. Теперь будут неспешно с ним разбираться, после чего уже закончу дела с API.

29 мая 2021 г.
--------------
Пробовал разобраться в проекте онлайн-платформы (Django 2/3 by example), но там так накручено, что отказался от этой затеи (запускал код автора, там те же проблемы, что и с моим, списанным с книги). Просмотрел курс от Валерия Павлова "Django для начинающих (Udemy)": проникся полезностью фикстур, а также уяснил смысл атрибута action при создании форм (тэг forms). Например, action="{% url 'product_detail' %}" означает, если я правильно понял, перенаправление после отправки формы по машруту 'product_detail'.

30 мая 2021 г.
--------------
Смотрел видео от Рустама Камалова (курс от Udemy "Python + Django"). Очень хороша подача + немало интересных моментов (создание форм - один из них). Зарегистрировался на платформе Hexlet (родом из Финляндии) - тоже обещают много практики по Python и Django (правда, для тех, кто готов платить по 14 тыр в месяц, но есть и тариф в 3600 рэ), собираюсь заниматься бесплатно (как утверждается, есть 20 бесплатных курсов).

31 мая 2021 г.
--------------
Приобрел в группе ВК Django Developers (как-то так называется) переводы двух книг - одну уже читал ранее в оригинале (и делал проект - тот самый, что про соусы), вторая посвящена разработке мобильных приложений на основе Django. Далее - купил домен docent63.ru у регистратора reg.ru и завел аккант на aws.amazon.com: теперь выясняю, как привязать русский домен к американскому серверу))) 

1 июня 2021 г.
--------------
Удалось привязать домен к серверу - по адресу http://docent63.ru вместо страницы-заглушки от REG.RU теперь другая - привественная страница от NGINX.Таким образом, время на привязку к серверу AWS заняло примерно сутки.
Да, к удаленному серверу по ssh также удалось подключиться. Но на десктопе опять возникли проблемы с распознаванием по ssh-ключу - и для git-репо, и для aws-сервера (правда, после перезагрузки компа соединение восстановилось).
Закончил изучение книги "Django 2/3 by example". Осуществил настройку на пр одакшн: главным образом, это настройка интерфейса uWSGI и настройка конфига веб-сервера NGINX. Сайт в браузере открывается, в консоли явных ошибок нет, но есть какие-то мутные сообщения (что-то насчет отсутствия на сайте системы роутинга). Да, еще - при переходе на uwsgi пропала половина команд (например, не мог выполнить collectstatic - пришлось запустить django-сервер, который предназначен для разработки). Думаю, дело в настройках, которые я прописал в файле uwsgi.ini (названия каталогов и структура проекта у меня отличаются от тех, что приведены в книге). Надо будет создать простой проект по "лекалам" книги и посмотреть, что будет в этом случае. 

2 июня 2021 г.  
--------------
Смотрю курсы по AWS. Интересные сервисы: EC2 (Elastic Compute Cloud), S3 (Simple Storage Service), CloudFormation, AWS RDS (Relation Database Service), IAM (Identity and Access Management). Следует уделить изучению AWS особое внимание, поскольку эта экосистема снимает множество проблем, связанных с эксплуатацией проекта.

3 июня 2021 г.
--------------
Осуществил деплой проекта на сервере AWS. По адресу http://docent63.ru разместил одну единственную страницу с надписью 'Hi there!'. Считаю это определенно успехом. Теперь надо будет проверить рабоспособность результата такого деплоя: отправление почты, в том числе с использованием асинхронщины (celery + rabbitmq). Читаю описание деплоя на digitalocean в книге "Django Easy" (как-то так, приобрел перевод этой книги, а ранее выполнил проект по ее оригиналу). Возможно, попробую это на практике.

4 июня 2021 г.
--------------
Отрабатывел методику деплоя с использованием uwsgi. 1) Упростил структуру приложения, подготовленного к деплою: собрал все файлы в каталог config (по сути, там стало на два файла больше: uwsgi.ini и nginx.conf). 
2) на сервере в каталоге /usr/local/bin/ разместил файл kick, в котором прописал скрипт, позволяющий узнавать статус сервера uwsgi (is running / is stopping), а также запускать и останавливать сервер. 3) проверил на практике процесс получения ssl-сертификата - он оказался весьма прост (и это хорошо). Описание всего этого находится в файле deploy_notes. 

5 июня 2021 г.
--------------
Разобрался и задокументировал деплой с использованием gunicorn. Смотрю видео Олега Новикова по созданию проекта сбора данных из сети о вакансиях программистов.

6 июня 2021 г.
--------------
Прошел все уроки (19 уроков) на Hexlet по курсу "Основы командной строки". Вспомнил работу команд find и grep (в том числе рекурсивно для find -maxdepth n (n уровней вглубь) и с указыванием номера строки в файле для grep -Rn (n - это номер строки)). Выяснил преимущества рекурсивного поиска по истории команд (комбинация Ctrl + r). В .bashrc от root записал строку su - mick и теперь терминал открывается именно от этого пользователя  и без вывода сообщения об ошибке при попытке попасть каталог root (естественно, через root, но это на экране не отображается). Теперь смотрю видео с Олегом Новиковым про парсинг вакансий и встраивание этого в django-проект: это нужно, но очень уж нудно.

7 июня 2021 г.
--------------
Начал просмотр двух курсов по анализу данных на Python (применяются, понятно, pandas numpy matplotlib): мастер-класс Глеба Михайлова и курс по анализу и парсингу. Перешел на убунту - отключил десктоп и подключил монитор и периферию к ноутбуку (первые впечатления - классно: быстро грузится, не шутим вентилятором, pycharm работает в профи версии и т.д.). Посмотрим, надолго ли хватит ресурса у этого девайса от Dell.

8 июня 2021 г.
--------------
Закончил просмотр видео про анализ данных (кое-что взял на заметку, но законспектировал только первые 5 уроков - долго, да и приложены ссылки на ноутбуки на  ресурсе автора). Наконец-то, разобрался (хочется в это верить) с тем, как привязывать интерпретатор в pycharm (выяснил, по крайней мере, как удалять недействительные ссылки на экземпляры интерпетаторов, прописанных в средах уже удаленных приложений).
Начал работу над освоением проекта по мобильной разработке на django+react (книга "Building Versatile Mobile Apps with Python and REST. RESTful Web Services with Django and React", автор Art Yudin). Интересная и многообещающая в плане расширения навыков книга - фронт на реакт и бэк на джанго (используется ReactNative - позволяет создавать приложения одновременно и для ios, и для android). Здесь чувствуется перспектива больших возможностей.  

9 июня 2021 г.
--------------
Проапгрейдил ноутбук - установил новую оперативную память (8Ггб вместо 4, при этом пришлось разобрать половину аппарата). Производительность ноута заметно увеличилась. Теперь при работе pycharm ничего не торомозит (самой ide тоже увеличил лимит памяти - до 2Ггб). Продолжаю заниматься по книге о мобильном приложении на Django.

10 июня 2021 г.
---------------
Продолжаю изучать React сразу по двум источникам (к мобильному приложению прибавиласть книга "Изучаем REACT", автор Кирупа Чиннатамби). Постепенно становятся понятнее структура приложения, составляющий ее код и смысл того, что такое компоненты, props и state.

11 июня 2021 г.
---------------
Изучаю книги, в одной из них (мобильной) дошел до собственно мобильной реализации и уперся в "много букв и кода" - иначе говоря, эту книгу надо не просто читать, а сразу же реализовывать черед код. Также прохожу курс "Основы программирования " на Хекслет - счел это нужным, поскольку "ознакомление" происходит через изучение основ js.

12 июня 2021 г.
---------------
Продолжаю изучать курсы по js и около того на хекслете - закончил три курса (книги сегодня не читал). Все таки дошел до бутстрапа - сохранил в браузерах закладки сайта, полазил по страницам (предполагаю осваивать с помощью курсов WebForMyself).

13 июня 2021 г.
---------------
Посмотрел 1-ю (теоретическую) часть курса по Bootstrap от WebForMyself. Основы понятны. Буду применять на практике (ближайший объект для опытов - сайт на AWS). 

14 июня 2021 г.
---------------
Обновил контент на сайте: подключил bootstrap, создал favicon. Залил на сервер и сначала никак не мог понять, почему не подхватываются стили. Потом вспомнил про collectstatic. Но стили опять же не подхватились. Пришлось вспомнить про настройки nginx и прописать соответствующие строки в его конфиге для сайта. Да, вроде бы наконец-то выбрал для себя подходящий метод разделения настроек на dev и prod (именно так назвал файлы, из которых импортируются настройки в settings.py). Здесь есть нюанс: следует прописать импорты в файле __init__.py (пробовал использовать библиотеки с переменными окружения, но без особого успеха - дома они работают, а на сервере почему-то не подхватываются). 

15 июня 2021 г.
---------------
Просматриваю курсы по аналитике от Анатолия Карпова (да, того самого знаменитого чувака со степика). По сайту: наладил скрипт kick - теперь он срабатывает, если его вызывают из каталога проекта. 

16 июня 2021 г.
---------------
Продолжается эпопея с ssh-ключами для разных репо, но от лица одного пользователя. Решил получить доступы для пользователя mick. Сложно сформулировать проблему, но ощущения такие, что настройки root перебивают локальные настройки mick (и это когда mick находится в своем каталоге и права на все файлы его). Пришлось в конечном итоге скопировать весь зоопарк из root/.ssh, но и тут возникли какие-то проблемы с правами на git. Для решения использовались команды (напишу их, пока не забыл; и да, команды надо вводить без sudo. Вообще, если система требует sudo в то время, когда пользователь находится в своем каталоге, значит, что-то пошло не так): 
eval $(ssh-agent) - возвращает какой-то номер, вроде бы процесса ssh-агента 
ssh-add - м.б. два ответа: плохой - агент не обнаружен, хороший - определяет агента (например, mick@DESCKTOP-5482) 
ssh-add -D - сбрасывает настройки агентов (помогает, когда на территории mick по старинке действуют законы root)
О том, что делал еще: просматривал курсы от Анатолия Карпова (интересны видео про git - решение конфликтов и пулл-реквесты - Анатолий со своим товарищем прямо перед экраном моделируют эти ситуации, и все становится еще яснее). 

В итоге, вырисовывается такая методика командной работы: 
--------------------------------------------------------
1. клонируешь репо проекта и создаешь свою ветку
3. разрабатываешь в своей ветке и периодически решаешь конфликты 
4. по результатам разработки делаешь из своей ветки пулл-реквесты
4.1. если изменения принимаются:
4.1.1. затягиваешь текущую версию из общего репо на локальный мастеp 
4.1.2. вливаешь этот мастер в свою ветку
4.2. если НЕ принимаются -  см. пункт 3

17 июня 2021 г.
---------------
С целью создания чего-то подобного на docent63 сейчас занимаюсь изучением структуры приложения blog (mysite) из Expample 2 (в планах - просмотреть код проекта от Андрея Кудлая из WFM). Отдельная проблема - отсутствие навыков верстки в целом и с использованием бутстрапа в частности.

18 июня 2021 г.
---------------
Наконец-то (в очередной раз, но все же надеюсь, что окончательно) разобрался тем, как настраивать разделениe режимов запуска приложения. Коротко излагая, это система импортов dev -> setting (from .dev import *) -> prod (from .settings import *) плюс настройка (в файле uwsgi.ini) пути загрузки переменных окружения (вместо env=...config.setting пишем env=...config.prod). Таким образом, в режиме разработки используем settings.py, а в боевом режиме - prod.py (и без всяких лишних загрузок из dev.py, прописывания импорта в __init__.py и прочего). Да, нашел сайт с русифицированной версией документации Bootstrap (bootstrap-4.ru) и теперь изучаю. На основе верстки сайтов от wfm удалось разбить страницу на две части 9/12-х и 3/12-х. Здесь же есть пример составных частей страницы в виде отдельных html-шаблонов (файлов): navbar, sidebar ect.

19 июня 2021 г.
---------------
Продолжаю изучать и внедрять цсс-фреймворк бутстрап. Начал использовать инструменты разработчика (в хроме) для поиска селекторов (путь к иным элементам оказывается весьма тернист). Создал папку inc и в ней ряд вспомогательных шаблонов (_nav.html, _sidebar.html, _footer.html), формирую навигационную панель. 

20 июня 2021 г.
---------------
При помощи кастомных тегов закрепил в сайдбаре список категорий постов. Сделал пагинацию, расширив функционал обработчика списка постов (а также присоединил к нему обработчик для конкретных категорий постов). Планирую ввести второй сайдбар для отображения последних опубликованных постов и наиболее комментируемых постов.

21 июня 2021 г.
---------------
Работаю над приложением блога: сделал фильтрацию по тегам (схожие статьи по количеству совпавших тегов), ввел комментирование (создал модель и основанную на ней форму). Осваиваюсь с бутстрапом.

22 июня 2021 г.
---------------
Сегодня прикрутил к сайту бд postgresql как сервис от AWS. Пришлось помучиться, так как мало кто упоминает о том, что надо изменять настройки т.н. "групп безопасности": значение правила inbound изменить на нули (буквально будет 0.0.0.0.0:00). Удобно, когда база данных уже есть и даже можно настроить режим ее бэкапа. Кроме того, выяснил, как можно приконнектиться к базе через клиент ("верстак" или бобра), используя соответствующий драйвер для бд aws (на сайте aws размещена инфа по подключению клиента к бд, но это надо внимательно читать, я сначала этот нюанс - с использованием особенного драйвера - не заметил). 

23 июня 2021 г.
---------------
Смотрел видео по функциям js из курса "JS Functions 2.0" от Александра Лушенко. Интересно, по делу, и не сильно утомительно. Перевел на postgres домашнюю версию проекта (и дэсктоп, и ноут).

24 июня 2021 г.
---------------
Сделал поиск на сайте. Сначала никак не мог понять, какую форму внедрить в навигационный шаблон и как передать из него искомое слово. Так как используется шаблон bootstrap со встроенной формой, то вариант из джанго 2 оказался частично избыточным (т.е. создаваемвая в нем форма оказалась не нужна), а поисковый запрос, как выяснилось, передается через значение атрибута name из тэга input (буквально: <input ... name="query" ...>, после чего query оказывается в соответствующем контроллере). Здесь же указывается, куда передаются введенные в форму данные: <form action="{% url "notes:post_search" %}" ... 
Посмотрел видео по бд Mongodb от Никиты Хохлова (нереляционная база, работающая с json-образными объектами - документами. Иерархия такова: кластер, база данных, коллекция, документ).

25 июня 2021 г.
---------------
В рамках проекта разобрался с загрузкой пользовательских файлов (т.е. с такими вещами, как: настройки в settings значений констант MEDIA_URL и MEDIA_ROOT, обертка маршрутов в urls из static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT), а также приложениями для работы с картинками - Pillow и easy-thumbnails). Кроме того, посмотрел очередные видео от Лушенко по JS 2.0 и разбирался с синтаксисом ORM (обращением из первичной модели ко вторичной и объектом Q).

26 июня 2021 г.
---------------
Перечитывал "Django for professionals" (искал инфу для реализации логин-разлогина и регистрации). Среди прочего вспомнил о debug-toolbar и django-extensions (пишется как-то так); полезные инструменты (последний позволяет при использовании) pm shell не импортировать модели. Посмотрел четыре видео от Лушенко Александра из цикла JS 2.0.

27 июня 2021 г.
---------------
Поставил вышеуказанные приложения. Оказалось, что "расширения" могут строить er-диаграммы БД проекта (надо только предварительно сделать apt install graphviz) и отредактировать settings. Разбирался с логино-разлогином - проблема в том, что джанго подавляет кастомные шаблоны, и поэтому приложение, отвечающее за логин-разлогин, надо ставить (в installed_apps) выше админки. Да, и не забывать о LOGIN_URL, LOGOUN_REDIRECT_URL и др. полезных в данном случае вещах.

28 июня 2021 г.
---------------
Сделал логин-разлогин и все такое. Обновил контент (в музыкальной тематике). Почему-то не работает почта на боевом режиме: через runserver письма доходят, а через uwsgi/nginx - только отправляются. Буду разбираться.

29 июня 2021 г.
---------------
Решил проблему с отправкой писем - вернее, случилась старая история: провайдеры (так и не понял, кто из них: майл или яндекс) приняли рассылку за спам и коннект отрубили (на время). Я написал в поддержку (писал в яндекс, ответ пришел от майл) и, что главное, отправил с сайта письмо на смену пароля, и оно благополучно дошло (со скоростью света).
Разобрался в обработке внешнего вида форм. Сначала поставил django-crispy-forms, но они не помогли (внешний вид не изменился, только поля стали не рядом друг с другом, а одно над другим). Нашел другую библиотеку - django-widget-tweaks - и она решила мои проблемы (правда, подписи к полям на английском, но это не беда). Да, сделал фикстуру auth.User и таким образом смого изменить id пользователей (было нужно для заливки фикстуры постов) - буквально сделал файл .json, в нем поправил номера id и залил в модель.

30 июня 2021 г.
---------------
Сделал формы с подписями на русском (обойтись без библиотеки django-widget-tweaks все же не удалось). Используя дебаг-тулбар, изучил запросы к базе данных: показываются три схожих запроса (по числу выводимых на страницу постов - в этих запросах формируются ссылки за соответствующие им теги) и два дубля (на одной и той же странице - когда выводятся все запросы - без фильтрации по категории или тегу - последние из опубликованных вообще совпадают с теми, что выводятся на первую страницу - там обратная фильтрация по дате публикации). Такая ситуация представляется нормальным, поскольку решение этих моментов в сторону оптимизации запросов (выигрыш по времени тысячные доли секунды) приведет к частичной потере функционала сайта (что неприемлемо).

1 июля 2021 г.
--------------
Реализовал редирект со страницы поста (иначе, после отправления комментария можно было отправить его еще раз, просто обновив страницу, что можно воспринимать как баг). Приступил к реализации проекта интернет-магазина: сейчас изучаю этот вопрос по "джанго 2 в примерах" и "джанго сделай легко". Продолжаю щупать бутстрап в надежде сделать по-настоящему адаптивную верстку сайта.

2 июля 2021 г.
--------------
Создал ветку в репо для реализации страницы портала (решил сделать для этого отдельное приложение, но вскоре понял, что это через чур). Эта самая ветка (кодил в wsl) вела себя очень странно - я удалял ее из центрального репо и из локального репо, но командой git checkout <имя ветки> мог снова возродить ее к жизни. Да и команда git branch -r выводила название этой ветки после ее якобы удаления. В общем, чудеса.
Кроме того, решил все же сделать отдельную страницу входа, для чего разместил ее в приложении notes. В принципе, получилось. Да, из приятного - удалось победить наследие винды для wsl - убрать фон в терминале Pycharm (подробнее об этом - в wsl_notes).

3 июля 2021 г.
--------------
Узнал о классной оконной утилите для получения инфы о ресурсах системы (linux). Называется она hardinfo и ставится так: sudo apt install hardinfo. Далее вызываем ее как hardinfo, после чего открывается окно с инфой (под wsl, скорее всего, работать не будет).
Занимился настройкой сайта: добавлял функциональности в навигационную панель, ввел кое-где использование get_absolute_url и т.д. Читал главы книг, где реализуется проект онлайн-магазина (изучение "сделано легко" закончил, "джанго 2" - в процессе).

4 июля 2021 г.
--------------
Занимался рефакторингом функций-обработчиков - изначально их было 4, стало 6. В частности, выделил функцию пагинации. Продолжаю изучать особенности реализации онлайн-магазина на джанго. Такое впечатление, что код у Антоние Меле усложнен по сравнению с тем, что представлен в другой книге (например, Меле вводит класс Cart и т.д.). 
Скачал курсы от Skillbox - про датасайентистов и скьюэль-аналитиков. Приступил к изучению датасайенс-курса - оказалось, там есть юпитер-ноутбуки и т.п. 

5-13 июля 2021 г.
-----------------
Отдыхаю. Очень хочется выйти из этого "отдыха". Пока не знаю как это сделать. В общем, жесть. Да, качнул книгу (еще не читал) про фронтенд на джиес, а бэк - на питоне. Интересно будет...

14 июля 2021 г.
---------------
Книга, про которую говорил, оказалась в 16 страниц) Но обещают скоро выдать полный вариант и на русском. Посмотрел видео по логгированию на питоне. Опять ничего не понятно: куда пишется лог - в stdout, в файл? Вообще, как и где это логирование применять (что б не теоретические, а реально)? Был бы пример, но его нет.

16 июля 2021 г.
---------------
После вчерашнего отдыха решил посмотреть имеющийся контент и в одном из курсов преподаватель посоветовал занимательную книгу по линуху. Называется она "Linux. Карманный справочник. Необходимый код и команды" (автор Скотт Граннеман). Написано интересно, поэтому думаю прочитать этот справочник целиком (хотя обычно их так не читают).

17 июля 2021 г.
---------------
Продолжил изучение справочника по линуксу. В частности, разобрался с тем, что такое suid (дает право пользователю на выполнение файла от имени владельца - например, от имени root), sgid (использование файла, созданного участником группы, в совместных для данной группы каталоге, остальными участниками этой группы - например, группой admins) и sticky bit (возможность совместного использования каталогов - например, каталога, /tmp).

18 июля 2021 г.
---------------
Изучение книги по линуксу продолжается. Вычитал интересный вариант исключения из выдачи при поиске заданных процессов самого процесса поискового запроса. Ранее использовал такой вариант, например: ps aux | grep python | grep -v grep. Автор предлагает действовать так: ps aux | grep [p]ython.  
К теме джанго еще не возвратился, но думаю пора начинать - надо отфакторить разметку шаблонов и стили, поскольку смотрятся они то как-то хаотично, бессистемно.

19 июля 2021 г.
---------------
Закончил читать книгу-справочник. Много интересных моментов есть про команду find, настройку сети и работу с ней. К Джанго пока не подступал. На очереди книга Любановича "Простой Python", посредством которой, надеюсь, мне удастся овладеть "идиоматичностью кода") Да, давно пора!

20 июля 2021 г.
---------------
Переработал верстку проекта и залил все это на сервер. Однако, адаптивную верстку еще не делал, поскольку здесь есть много вопросов. Да, Любанович пишет прекрасно, читать его очень интересно. Надеюсь, с его помощью удастся получить систематизированные знания о предмете.

21 июля 2021 г.
---------------
Сделал адаптивную верстку проекта: теперь он одинаково аккуратно смотрится как на десктопе, так на смартфоне. На этом первую часть проекта - создание блога - можно считать успешно законченной. Пора переходить к реализации второй части - онлайн-магазина.

22 июля 2021 г.
---------------
Приступил ко второй части - создал ветку shop и начал разрабатывать. Читаю Любановича. Собираюсь приобрести планшет (думаю, это поможет еще более интенсивно  обучаться). 

23 июля 2021 г.
---------------
Прочитал первую часть книги Любановича. Очень вразумительно написано про классы: наконец-то стало ясно, что там делают геттеры-сеттеры в связке с property. Хорошо объяснено различие методов объектов\классов и статических методов, основные моменты из модуля collection.

24 июля 2021 г.
---------------
Работаю над второй частью - идет непросто (за основу взял "соусы", а у них бутстрап версии 4.1, поэтому некоторые тэги неактуальны, и пришлось поставить на место базового шаблона тот base.html (назвал его shop.html), что фигурирует в "соусах").

25 июля 2021 г.
---------------
Довел до ума шаблоны и прочее вплоть до страницы оформления заказа (пришлось повозиться с js, так как прописанная автором функция возвращала NaN вместо числа). Следующий шаг - решение проблемы прикручивания платежной системы (ориентируюсь на сбер): кое-какие решения в сети есть, осталось лишь выбрать лучшее из них))).

26 июля 2021 г.
---------------
Работал над проектом онлайн-магазина: сделал эксель-выдачу и пдф-отчеты, протестировал работу celery и rabbitmq (насчет последнего есть сомнения, что он вообще принимает участие в работе приложения: почта рассылается и тогда, когда статус зайца - из дэд).
Наладка платежной системы от сбера, как и предполагал, весьма и весьма непроста. Начинать надо хотя бы с того, что необходимо заскючать какой-то договор, после чего предоставят какую-то документацию и тестовые реквизиты. Но попробовать все же определенно стоит.

27 июля 2021 г.
---------------
Продолжаю читать Любановича (2/3 книги осилил). Смотрел видео от Рустама Камалова из курса "Джанго: с нуля до коммерческих проектов" и узнал про файл /etc/environment, куда автор курса предлагает прописывать переменные окружения (надо будет попробовать, вдруг все же удастся как-то считывать эти переменные на сервере; предыдущая попытка с файлом .env успехом не увенчалась). Да, обновление содержимого файла происходит командой source /etc/environment.

28 июля 2021 г.
---------------
На основе видео Камалова создал телеграм-бота (как всегда с телеграм, были проблемы - никак не мог получить айди чата. Оказалось, надо открыть телеграм в браузере, причем телеграм с доменом .ru, после чего зайти в чат и скопировать из адресной строки этот самый айди. В приложении телеграм получить номер чата не удалось). Созданный бот берет данные из оформленного заказа (номер заказа, имя и фамилия заказчика, телефон и почту) и передает их в чат. В принципе, несложно и функционально.

29 июля 2021 г.
---------------
Работал над проектом магазина: решил проблему отправки при оформлении заказа (оказалось, что неправильно были написаны экземпляры строки, отвечающей за выбор). Далее изменил вид страницы списка товаров (верстку и стили). Дочитал Любановича и взялся за очередную книгу ("Секреты Python pro", автор Хиллард Дейн). Думаю, как решить вопрос с платежной системой.

30 июля 2021 г.
---------------
Продолжаю читать книгу Хилларда (он уже успел рассказать о пространстве имен как факторе имортирования модулей и иерархии функций-классов-модулей-пакетов). Начал изучать документацию Django Rest Framework (и параллельно с этим заново просматривать книгу Винсента Django for API's), ибо нужная и важная тема, которую надо будет реализовать на следующем этапе проекта демосайта (к решению проблемы платежной системы вплотную так еще и не подступал).

31 июля 2021 г.
---------------
Работал над проектом - реализовывал функциональность модели Profile. Снес и вновь создал БД (сначала удалил пару таблиц и попытался их создать, но джанго, согласно своим записам в таблице django_migrations, счел, что эти таблицы есть. Поэтому было решено снести таблицу django_migrations. После этого всякие попытки миграций наталкивались на ошибки, в итоге пришлось базу дропнуть).

1 августа 2021 г.
-----------------
Доделал базовый вариант магазина и влил ветку shop в ветку master (на удивление, система не нашла ни одного конфликта). Читаю Дейна, это действительно очень полезная книга, где демонстрируется как надо разрабатывать приложения (в самой книге, ее 3-й части, рассматривается пример создания приложения Bark - оно работает с закладками; соответственно, задействуется БД, здесь, для простоты, это sqlite3).

2 августа 2021 г.
-----------------
Работал над шаблонами: сделал такую же адаптивную верстку навбара для блога, что и в магазине (кроме того, создал простой футер - (с) 2021 Docent63). Читаю книгу Дейна. Узнал (не из книги), как запускать веб-приложение по ip-адресу своей машины: python manage.py runserver 182.168.0.104 (адрес примерный, узнаем, в зависимости от ОС, командами ifconfig (linux) или ipconfig(windows)).

3 августа 2021 г.
-----------------
Переводил модели и шаблона на русский язык. В процессе оказалось, что вылетает ошибка оформления заказа из-за невалидности данных. Сначала что-то запаниковал и даже откатил на пару коммитов версии репо на десктопе (зря - не помогло). Но потом собрался силами, поискал траблы принтом и файндом с репром, в итоге выяснил, что проблема таки заключается именно в неосторожном переводе строки в шаблоне оформления заказа - исправил и всё запустилось. Дейна прочитал до 10-й главы.

4 августа 2021 г.
-----------------
Доделал магазин (главным образом, в плане шаблонов). Выяснил, что слил на удаленный репо кое-какие координаты, поэтому снес центральный репо, создал одноименный и залил на него один из локальных репо (с убунты). Далее, залил изменения на сервер, и теперь там крутятся блог и магазин (сельдерей, вроде бы, работает, но такое впечатление, что он вырубается после каждой остановки приложения и самостоятельно не поднимается, а значит, придется его поднимать явно - через какой-нибудь баш-скрипт).

5 августа 2021 г.
-----------------
Создал встроенный тег (inclusion tag) с параметрами высоты пустого пространства и футера для оформления страниц блога. Здесь главное помнить, что этот самый тэг (как и другие тэги) должен вставляться к пространство тэгов, опредленных в базовом шаблоне, иначе ничего отображаться не будет.
Проблему с селери решил путем создания соответствующей службы (назвал ее celery.service). Подробнее об этом в django_notes.

6 августа 2021 г.
-----------------
В приложении магазина разбил функцию order_create на четыре функции, что, думается, следало код проще. Изучил варианты реализации платежной системы от юкассы, нашел самый простой (редиректит пользователя на страницу оплаты на стороне юкассы, а потом возвращает на ту страницу сайта, которую укажет запрос с сайта), в целом понятно, как можно его реализовать (для этого, правда, надо стать самозанятым). Читал про джанго, смотрел видео из курса отуса про реакт.

7 августа 2021 г.
-----------------
При перемещении каталогов проектов из одного места в другое возникла задача с заменой одной подстроки другой подстрокой в группе файлов (среда окружения venv/env). Решил ее примерно таким способом (пишем скрипт, где $1 - это подстрока, которую заменяем, а $2 - подстрока, которой подставляем):
find . -type f | xargs grep $1 > files
for file in $(ls files)
do
    sed "s!$1!$2!" file
done

8 августа 2021 г.
-----------------
Реализовал симуляцию процесса оплаты на сайте. Последовательность действий такова: 
1) пользователь заполняет форму заказа своими данными и жмет на "Оплатить" (по этому действию в БД создается запись заказа - т.е. заказ сформирован; на почту пользователя отправляется письмо с уведомлением о создании заказа, а в телеграмм-чат продавца - сообщение о создании заказа). 
2) пользователь попадает на страницу платежной системы (т.е. редиректится с сайта магазина на сайт, например, юкассы). Здесь задается вопрос "Оплачиваем?" и есть две кнопки: а) "ДА" (при нажатии происходит редирект на страницу успешного платежа, статус его заказа изменяется на "Оплачен", содержимое корзины обнуляется) и б) "НЕТ" (при нажатии пользователь возвращается на страницу оформления заказа, статус заказа не изменяется, корзина не обнуляется). Примечание: во втором случае, если пользователь все же надумает совершить заказ, будет оформлен новый заказ (а старый будет уже недоступен для оплаты). В сущности, эти кнопки призваны моделировать следующие ситуации: а) платеж прошел успешно и б) платеж по каким-то причинам (технического плана или просто пользователь передумал) не прошел. Считаю, что эту задачу на данном этапе (моделирования процесса оплаты) решить удалось.  
В очередной раз приступил к ознакомлению с технологией RestAPI по книге Винсента Django for API'S (с каждым разом смысл становится все понятнее и понятнее))). Читал Мастеринг джанго 2 и 3.

9 августа 2021 г.
-----------------
Реализовал получение ссылки на страницу оплаты платежной системы через api. Теперь функция order_create редиректит на маршрут с функцией get_order_pay_link, которая делает запорос по api и получает ссылку на страницу платежной системы, на которую и переводит пользователя. Для всего этого создал симуляцию и, думаю, что в свое время будет достаточно просто поменять кое-какие моменты, и систему оплаты можно будет использовать в боевом режиме.
Продолжаю разбираться с RestAPI в реализации DjangoRestFramework, читаю мастеринг джанго 2 и 3.

10 августа 2021 г.
------------------
Закончил изучать проекты по книге Django for API's. Теперь имею базовое представление о том, как это работает. Да, система аутентификации rest_auth работает сама по себе нормально, но для реализации функций регистрации надо ставить django_allouth, а это значит, что возникнет конфликт с предустановленным приложением django.contrib.auth.
В качестве документации к апи установил swagger, но его корректная работа для Django 3.0 и выше требует подкорректировать код библиотеки свагера (.../site-packages/rest-framework-swagger/...): заменить в файле index.html {% load staticfiles %} на {% load static %}.
Продолжаю читать Мастеринг джанго - отмечу классное описание продвинутых возможностей моделей и, в частности, ORM (глава 9).

11 августа 2021 г.
------------------
Начал читать книгу про связку джанго и реакт. Под это дело пробовал создать репо, но оказалось, что оно будет содержать более 20 тысяч файлов (видимо, из-за js: там есть каталог node_modules - или как-то так, от него, думается, все это "зло"))).
Решил сделать карусель на главной (начальной) странице сайта. Долго разбирался, но что-то подобное вышло (т.е. картинки меняются, так что базисный уровень задачи достигнут).
Читаю мастеринг джанго, много интересного (наконец-то нашел внятную инфу о том, что такое объект request, и какие у него атрибуты и методы водятся).

12 августа 2021 г.
------------------
Продолжаю заниматься каруселью: использую карточки, в цикле получилось вывести текст на фоне картинки (размеры карточки надо задавать явно - например, style="height: 550px; width: 350px"). Вопрос в том, как вводить текст. Есть два варинта - либо сразу в шаблон, либо создавать модель в БД и через представление передавать данные в шаблон. Попробовал через БД, но это не очень удобно (пришлось создать две таблицы и выводить данные в двойном цикле - и я смутно представляю, сколько запросов при этом идет в БД). Склоняюсь к тому, чтобы ввести текст прямо в шаблон.

13 августа 2021 г.
------------------
Закончил проект: слил все ветки в мастер и залил результат на сайт. На сайте приложение не могло достучаться до одной из своих таблиц по api (получение ссылки на страницу платежной системы) и пришлось эту ссылку просто записать в виде строки. Главную страницу сделал-таки с каруселью и почти не едущей вправо версткой: получилось, как говорится, симпатично))) Всё, перехожу вплотную к изучению React и далее по территории js. 

14 августа 2021 г.
------------------
В развернутом на сервере проекте Docent63 есть проблема - оно не желает обращаться к своему апи так, чтобы получить нужные данные. Проверил это, запустив другое приложение (использовав ngrok) со схожим апи - в итоге выяснилось, что с чужим апи приложение функционирует как надо (что, собственно, и будет нужно, это связано с подключением платежной системы). Но все равно интересно, почему оно не желает сделать запрос по апи к самому себе и обработать этот запрос как надо.  
По случаю получил доступ к курсу Алексея Голобурдина (Диджитализируй!). Интересная инфа, но (посмотрел еще не полностью) 30 тыс (такая цена указана на степике) за это, думается, все же многовато.

15 августа 2021 г.
------------------
Досмотрел видео от Голобурдина (благодаря этому удалось решить проблему "движухи" шаблона главной страницы сайта - просто написал стиль для body, где указал, что width: 100%; padding-left: 15px; padding-right: 15 px;). Интересна информация о деплое (и покупке ssl-сертификата; посмотрел на рекомендованном сервисе свой сертификат - оказалось, что он выдавался на полгода и закончится где-то в начала ноября). 
Посмотрел две лекции, посвященные асинхронному программированию (async await) - одна от Бауманки, другая от Яндекса. Мало что понял, но все что-то в голове осталось (надеюсь).

16 августа 2021 г.
------------------
Дочитал русскоязычную часть мастеринга джанго 2 и 3 (это процентов 80-85 от всего текста). Выполнил 4-ю главу из книги джанго+реакт.

17 августа 2021 г.
------------------
Добрался до мобильной разработки и застрял в установке эмуляторов (для айфона я и не думал всерьез ставить симулятор, а вот с андроидом что-то идет не так).

18 августа 2021 г.
------------------
Занимаюсь мобильной разработкой)) Создал систему экранов, но есть проблема: навигация этих экранов представляет собой нагромождение слоев вместо последовательного включения друг в друга (ищу ошибку, но вряд ли найду - повторил код, который работает правильно в демо, но у меня отрабатывает так же, как и мой код). 

19 августа 2021 г.
------------------
Продолжаю изучать реакт-нэйтив. Просмотрел курс от Голосниченко (как-то так) по созданию приложения погоды. Далее прохожу книжку от Юркина - с трудом и боем - возникают проблемы (с навигацией, как уже здесь отмечал; кроме того, expo не видит localhost, поэтому пришлось задейстововать ngrok: ./ngrok http 8000). В целом, прогресс есть.

20 августа 2021 г.
------------------
Посмотрел 2-ю часть (называется "Основы") курса ВМинина по реакт-нативу. По книге закодил 6-ю главу (теперь на главной странице список отображается в виде карточек).

21 августа 2021 г.
------------------
В рамках изучения мобильного приложения работаю над отправкой данных из фронтенда в бэкенд. Замечательно то, что в книге рассматривается процесс регистрации пользователя через рест апи (именно этого не хватает в проекте доцента63, чтобы, если будет необходимость, создать полноценную систему аутентификации и авторизации на основе предустановленной системы account, т.е. без обращения к каким-то сторонним приложениям типа django-allouth).

22 августа 2021 г.
------------------
Выполнил проект мобильного приложения (за исключением операций к изображениями). Изучил методику деплоя проекта на сервере (бэкенд) и в сторах (фронтенд) - в случае с андроид можно будет попробовать (цена вопроса - 25 баксов оргсбора).
Законспектировал справочник по линукс от Граннемана (взялся за это по той причине, что начал изучение очень интересной книги по линксу в контексте обеспечения веб-безопасности (это другая книга, чем та, о которой упоминалось ранее, у этой два автора)).

23 августа 2021 г.
------------------
Проработал часть № 1 книги "Bash и кибербезопасность". Наконец-то, уяснил, что такое обратные ссылки в регулярных выражениях. Проработал 3-ю главу книги Кирупи, где он, вводя в реакт, объединяет в один файл index.html, index.js и App.js (и все становится очень прозрачно и понятно).

24 августа 2021 г.
------------------
Читал "Bash и кибербезопасность". Сделал 5 и 6 главы Кирупы (разобрался с передачей значений атрибутов через this.props и оператор расширения ...this.props). Начал разбираться со state: способом хранинения данных таким образом, чтобы их можно было бы изменить.

25 августа 2021 г.
------------------
Смотрел курс от Голосниченко по реакту. Читал и конспектировал "Bash и кибербезопасность". Кодил в рамках Кирупы (повторял синтаксис использования props и state - это надо делать регулярно и помногу).

26 августа 2021 г.
------------------
Занимался по книге Кирупы, прошел по коду главы №№8-10. 

27 августа 2021 г.
------------------
Занимаюсь реактом. Застрял на главе 14-й (работа с внешними данными): не могу получить по апи ответ на запрос. Приложение стоится на базе create-react-app - что интересно: подобное однофайловое приложение (взял с оригинала, размещенного автором) нормально работает.

28 августа 2021 г.
------------------
Сделал 15-ю главу из книги Кирупы (приложение todolist - ввод текста через форму, отображение текста и удаление при клике мышки на поле текста). Смотрю видеоролики Александра Лущенко.

29 августа 2021 г.
------------------
Прошел по книге Кирупы вплоть до 19-й главы включительно. Смотрел видео по js от Юрия Буры (в курсе про реакт есть уроки по синтаксису, введенному стандартом ES 2015).

30 августа 2021 г.
------------------
Закончил разбирать книгу Кирупы. Просмотрел курс Александра Лущенко по реакт-лайт (кроме проекта - создания приложения по калькуляции валютных курсов).

31 августа 2021 г.
------------------
Досмотрел курс Лущенко по реакту и ряд видео от него же в рамках курса JavaScript 2.0
Разобрался с алгоритмом решения задачи на нахождение второго максимума (реализация на python).	

1 сентября 2021 г. 
------------------
Прочитал по паре глав из книг по реакту. Приступил к разбору кода js20 от Лущенко. Планирую решать задачи, размещенные на его сайте.

2 сентября 2021 г.
------------------
Читал книгу по реакт от Азата. Готовил базу для решения задач от Лущенко по курсу js 2.0.

3 сентября 2021 г.
------------------
Закончил просмотр видео от Александа Лущенко: досмотрел курс по js2.0, а также полностью курсы по продвинутой верстке (интересные моменты про бутстрап) и node.js. Читал книгу Азата (7-ю главу окончил - посвящена формам и перешел к 8-й - дефолтным обозначением свойств в компонентах).

4 сентября 2021 г.
------------------
Занимаюсь по курсу Михаила Непомнящего (весьма обстоятельный курс). Пытаюсь выполнять практические задания (смотрю, запоминмаю, пишу, стираю и снова пишу).

5 сентября 2021 г.
------------------
Кодил практику от М. Непомнящего (таймер с сохранением состояния в локалсторидж и проброс функции - ее определение в App и вызов в Post), смотрел видео от Ю. Буры (реализация проекта Todo - списка запланированных дел). Читал Азата (основное выяснил, остались проекты - их буду изучать, возможно, на практике) и Скота (создание серверных приложений и всего, что с ними связано: например, аутентификация).

6 сентября 2021 г.
------------------
Занимался изучением создания и управления формами (т.н. управляемые компоненты). Воспроизводил код по задачам, что делаю в курсе М. Непомнящего (возникли проблемы с передачей состояния по компонентам и отображению элементов массива через функцию map).

7 сентября 2021 г.
------------------
Просматривал видео от Буры и Непомнящего. Делал практику по теме так называевых рефов (ref) - ссылок, с помощью которых осуществляется взаимодействие с неуправляемыми (неконтролируемыми - это одно и то же?) компонентами. Читал Скота - перешел в ту часть книги, которая (до самого конца) посвящена фронтенду (UI).

8 сентября 2021 г.
------------------
Занимался  практикой - дважды воспроизводил код по занятиям Непомнящего (таймер, проброс пропсов и функции, формы и рефы). Смотрел видео от Отус по курсу реакт-разработки (интересен урок 5 - показывается, как делать пулл-реквесты, разрабатывая в своем репо или в форке).

9 сентября 2021 г.
------------------
Приступил к практическому разбору проекта Буры - создал структуру проекта (каталоги компонент), отрисовал внешний вид (для этого нашел и изучил нужный фрагмент соответствующего репо на гитхабе - оказалось, что бутстрап 5-й версии  не поддерживает то, что задумано автором).

10 сентября 2021 г.
-------------------
Смотрел видео из курса (автор Васил Велмык), охватывающего js, react и прочее. Курс содержит много полезной теоретической и практической информации, подача материала отличная.

11 сентября 2021 г.
-------------------
Продолжал делать учебный проект "Todo" по курсу Юрия Буры (удаление и вставка элементов списка путем создания нового списка, изменение стилей и пр.).

12 сентября 2021 г.
-------------------
Закончил проект Todo от Юрия Бурды и просмотрел видео по второму его проекту. Скачал полную версию его курса (а также курсы других авторов по реакту и даже нэкст) и также полную версию курса от скиллбокс по django-фреймворк.

13 сентября 2021 г.
-------------------
Просмотрел видео от Велмыка об асинхронном js (ajax, promise, async - await), а также инструментах разработчика. Перешел к просмотру видео про реакт.

14 сентября 2021 г.
-------------------
Досмотрел видео про реакт от Васила Велмыка. Ознакомился с проектом Михаила Непомнящего - сайт с поиском фильмов по апи на основе базы данных из источника www.omdbapi.com

15 сентября 2021 г.
-------------------
Создал проект по курсу Непомнящего - это страница с данными из базы данных по фильмам. Разместил ее на github pages. Были проблемы с wsl - не удавалось запустить сервер (вылезала ошибка - что-то связанное с powershell и путями), но после того, как переустановил nodejs и npm (думаю, дело в последнем, буквально накануне сделал его обновление) все заработало.

16 сентября 2021 г.
-------------------
Приступил к выполнению проекта Ю. Буры по мотивам старварс. Здесь идет работа с сервером и прочие интересные вещи.

17 сентября 2021 г.
-------------------
Выполнил главу 7 о жизненном цикле компонентов по курсу Ю. Буры. Просмотрел видео из курса Велмыка про юнит-тесты в реакт-приложении.

18 сентября 2021 г.
-------------------
Занимался вопроизведением кода проекта тодо от Юрия Буры. Нашел курс по верстке от Михаила Непомнящего.

19 сентября 2021 г.
-------------------
Воспроизводил код из проекта Юрия Буры todo. В целом, удалось. Особые сложности вызывают фильтрация и поиск.

20 сентября 2021 г.
-------------------
Полностью по памяти воспроизвел код приложения todo. Кроме того, удалось написать функцию сортировки и реверса (сам алгоритм сортировки, понятное дело, пришлось гуглить).

21 сентября 2021 г.
-------------------
Смотрел курс от Вл. Минина по реакту (ознакомительный просмотр). Начал изучать его проект с хуками (установил и подключил бутстрап как препроцессор: npm i bootstrap@4.6; npm i -g yarn; yarn add node-sass).

22 сентября 2021 г.
-------------------
Продолжаю изучать курс Вл. Минина в части проекта по получению данных с гитхаб.Сложности вызывает структура приложения - много файлов, поэтому трудно проследить их взаимодействие.

23 сентября 2021 г.
-------------------
Воспроизвел проект туду от Буры - после 2-3-х дневного перерыва пара моментов забылась, даже пришлось посмотреть в репо. В целом, база классов реакта усвоена.

24 сентября 2021 г.
-------------------
Изучаю проект Вл. Минина по гитхабу. Есть сложности. Например, логика работы с использованием хуков useReducer() и useContext(): последовательность "что за чем и как вызывает", а также синтаксис кода.


25 сентября 2021 г.
-------------------
Воcпроизвел по памяти код Вл. Минина по проекту, связанному с поиском по гитхабу (пока что изучил только первую часть этого проекта). Просмотрел видео от Анны Кузиной по парсингу сайтов и в очередной раз начал смотреть курс по той же тематике от Олега Тихонова (не уверен, что правильно запомнил его фамилию).

26 сентября 2021 г. 
-—-----------------
Полностью просмотрел видео по парсингу от Олега Молчанова.
Кроме это смотрел видео по ES6 от Буры и опять проект по гитхабу от Минина.

27 сентября 2021 г.
-------------------
Закончил разбирать проект Вл. Минина по гитхабу. В принципе, логика ясна (но повторить этот код вряд ли сейчас смогу). Однако, научился основам работы с хуками (по крайней мере, узнал что это такое: useContext, useReducer,  useState, useEffect).

28 сентября 2021 г.
-------------------
Смотрел видео по построению функциональных компонент с использованием хуков. Начинаю изучать и воспроизводить такой код.

29 сентября 2021 г.
-------------------
Продолжаю смотреть видео от Буры. Просмотрел рефакторинг - автор практически полностью переписал код из глав "Работы с сервером" и прочих. Понимается с трудом, а местами вообще нет понимания. Но это мотивирует на изучение кода путем практических занятий - начало проекта (речь о звездных войнах) есть, теперь надо его продолжить (наверное, это будет после просмотра всех видео данного курса).

30 сентября 2021 г.
-------------------
Все так же смотрю видео по реакту от Ю. Буры (конкретно просмотрел: бэйбэл, вебпак, роутинг, редакс). Скоро перейду к кодингу.

1 октября 2021 г.
-----------------
Просмотрел видео от Буры (работа с сервером и методы жизненного цикла) - этот код у меня уже выполнен. На очереди - паттерны.

2 октября 2021 г.
-----------------
Смотрю видео от Ивана Петриченко (курс по js и react, март 2018 г.). Интересен тем, как на нативном js идет работа с DOM.

3 октября 2021 г.
-----------------
Начал выполнять рефакторинг старворс на основе паттернов от Ю. Буры. Смотрю курс по работе с node.js от Вл. Минина.

4 октября 2021 г.
-----------------
Сделал рефакторинг (без введения контекста) старворс (этапы главы построены очень своеобразно - какой-то код, который вводится, потом откатывается назад).Продолжаю смотреть курс по node.js

5 октября 2021 г. 
-----------------
Закончил изучение кода проекта Буры starwars. Просматриваю курс Вл. Минина по node.js (просмотрел блоки express и mongodb).

6 октября 2021 г.
-----------------
Приступил к финальному проекту курса Ю. Буры (интернет-магазин комп. литературы) - разумеется, это фронт-енд без какой-либо связи с бэком.
В профиле на гитхабе за сентябрь только дней 5 отмечена как активные. Это странно - запись своей деятельности веду и коммичу здесь ежедневно. Так-то похер, но возникают сомнения по поводу надежности этого ресурса (сами записи в порядке).
 
7 октября 2021 г.
-----------------
Досмотрел до конца видео с финальным проектом Ю. Буры. Сделал часть этого проекта (возникло препятствие для выполнения - после 11 лет работы накрылся монитор, но уже заказан другой). Последние видео собственно проекта уже не касаются (идет высший пилотаж). Не получается до конца понять механизм взаимодействия системы реакт-редакс: компонент - экшнс - редьюсер - стейт (последние два как части стора). 

8 октября 2021 г.
-----------------
Практиковал код по проекту redux-sandbox от Юрия Буры. Здесь создается функция reducer и сначала идет чистый js, далее подключается redux и наконец react. Приходит понимание этого механизма.

9 октября 2021 г.
-----------------
Работаю с кодом - на память воспроизвожу проект счетчика, использующего react-redux. Просматривал видео по линуксу от Андрея Барабаш (канал itdvn предоставил такую возможность по акции).

10 октября 2021 г.
------------------
Работаю с кодом проекта Ю. Буры (книжный онлайн-магазин): mapStateToProps / mapDispatchToProps.

11 октября 2021 г.
------------------
Законспектировал курс по линукс от А. Барабаш (наконец-то разобрался с крон - удалось запустить и увидеть результаты: проблема была в том, что службы крон просто не запускалась автоматически после загрузки ОС).
Продолжаю прорабатывать код проекта Ю. Буры (дошел до детализации товаров книжного онлайн-магазина).

12 октября 2021 г.
------------------
Окончил изучение и копирование кода проекта Ю. Буры (онлайн-магазин). Перешел к недорассмотренным проектам М. Непомнящего. Полученная информация не спешит структурироваться, но, думаю, разработка своего приложения на реакт решит эту проблему.

13 октября 2021 г.
------------------
Работал над кодом М. Непомнящего: варианты реализации таймера в классовых и функциональных компонентах, а также изучал использование хука useContext().

14 октября 2021 г.
------------------
Воссоздавал по памяти код (использование контекста и таймер - классы и хуки). Смотрел видео из финального проекта М. Непомнящего, посвященные созданию SPA.

15 октября 2021 г.
------------------
Досмотрел видео от М. Непомнящего по созданию одностраничного приложения. Практиковал код таймера с использование контекста, разобрал вариант таймера с редьюсером, вспомнил и реализовал поиск.

17 октября 2021 г.
------------------
Вчера добавил к приложению на реакте фильтрацию. Теперь могу самостоятельно написать код как для классовых, так и функциональных компонент (главное теперь, практиковать это как можно чаще). 
Скачал с базы курсов еще один курс по реакту (приложение прогноза погоды).
Зарегистрировался на codewars и восстановил учетную запись на checkio, где решают задачи на python и js.

18 октября 2021 г.
------------------
Смотрю курс по Next.js от Антона Ларичева. Этот фреймворк использует react и дополняет его функциональность (typescript, routing, grid css, ssr etc.). Не уверен, что буду это реализовывать, но материал однозначно интересный.

19 октября 2021 г.
------------------
Просмотрел наиболее интересные важные модули обоих курсов Антона Ларичева. Посмотрел код Олега Новикова по парсингу данных с сайтов поиска работы, запуска их внутри django и сохранения в БД. Пересмотрел блок работы с сервером от Юрия Буры. Ознакомился с api HH.ru. Думаю создать на этой основе реакт-приложение по поиску вакансий.

20 октября 2021 г.
------------------
Начал работу над реакт-проектом HH.ru Начались сложности с версткой. Пытаюсь разработать методику создания быстрого универсального шаблона на основе бутстрапа (быстрого - т.е. сам все сверстал, беря из памяти названия 5-10 классов для навбара и карточек).

21 октября 2021 г.
------------------
Внезапно возникла проблема отображения django-проекта на разработочном сервере. Браузеры не открывали адреса (http://) localhost:8000 127.0.0.1:8000. Поменял (раскомментировал строки с указанными адресами) в файле c:/Windows/System32/drivers/etc/hosts, после чего перезапустил систему и все заработало. Есть здесь какая-то связь, не уверен, но страница сайта в браузере начала отображаться. 
Начал смотреть курс от СкиллБокс по Django - пришла пора вспомнить уже изученное и получить новые знания, тем более, что, судя по названиям модулей, курс охватывает широкий спектр этапов, аспектов и методов разработки.

22 октября 2021 г.
------------------
Занимался решением заданий по курсу Скиллбокс (модуль 3): научился создавать middleware и представления-классы на основе View и TemplateView. Никак не получается реализовать счетчик вызова метода get такого класса.

30 октября 2021 г.
------------------
Неделю отдыхал и никакого кода не писал. Но теперь восстанавливаюсь. Изучаю (скорее, просматриваю) книгу Мюллера и Массарона "Python и наука для чайников" (написано хорошо, много знакомо).

31 октября 2021 г.
------------------
Продолжил разработку приложения по HH: сделал пагинацию, разбил один весьма неоднородный компонент на несколько однородных. В общем, задумался о структуре приложения и начал ее изменять.

1 ноября 2021 г.
----------------
При разработке НН решил две проблемы: 1) не срабатывал компонент-лоадер (проблема оказалась в неправильном хуке useEffect) и 2) сообщение в консоли показывало, что на каждый клик происходит двойной запрос по api (на самом деле, просто не там поставил console.log(...) и достаточно было бы посмотреть на вкладку networks с ajax-запросами - оказалось, что и useEffect вызывается единожды, и на каждый клик приходится по одному запросу). Кроме того, создал функцию для regex-обработки значений из json-файлов и вообще усилил стойкость приложения к вероятности неполучения тех или иных данных от сервера. 

2 ноября 2021 г.
----------------
Сегодня кода не писал. Просмотрел (частично) курс от Андрея Соболева, посвященный брокеру сообщений RabbitMQ. Надо признать, что Андрей, видимо, классный программист, но курс у него не слишком удался (хотя я и понимаю, что рассказать просто о сложном - это надо суметь). Но сама тема интересна и перспективна для изучения и применения.

3 ноября 2021 г.
----------------
Посмотрел крайне интересный вебинар от ITDVN (так что ли оно называется), посвященный git flow. Оказалось, что это очень классная вещь для организации процесса контроля версий в команде (была показана работа в строке git flow).
Случайно попалась на глаза документация по flask (в русском переводе). Заинтересовался и сделал небольшой учебный проект (блог) по приведенному в данной документации примеру. Наконец-то, удалось получить более-менее обстоятельное представление об этом фреймворке.

4 ноября 2021 г.
----------------
Занимался джанго-курсом от скиллов. Затер проект со сделанными middleware, но это даже хорошо - потренируюсь создать их еще. Создавал модели, да так, что пришлось снести БД (благо, это sqlite). Интересные задания дает гуру - написать программу на создание в БД сотни тысяч записей, что я и постараюсь в ближайшее время сделать.

5 ноября 2021 г.
----------------
Продолжаю работать по джанго-курсу. Научился работать с формами на основе представления-класса - делать гет- и пост-запросы с записьюв БД. Код стараюсь писать по памяти. Удалось написать кастомную команду с запуском от python manage.py (делает много-много записей в БД). Освоил создание шаблона с формой.

6 ноября 2021 г.
----------------
Смотрел на ютубе видео от компани kts, посвященное применению асинхронного кода (у них есть целый курс по данной тематике). Читал на хабре статью от Отус по этому же вопросу.  
На джанго-курсе освоил создание классо-представлений для создания и редактирования данных, передаваемых через форму (на примере профиля пользователя).

7 ноября 2021 г.
----------------
Решил создать отдельный проект с репо на битбакете и заливать джанго-проекта с курса скиллбокс туда. И столкнулся с известной проблемой: битбакет не хотел дружить по ssh. Пришлось пересоздать ключи (для root и mick в wsl). Вопрос решился достаточно быстро, но тольк после того, как прочел инструкцию на самом битбакете.
Успешно продолжаю изучать скиллбок-джанго. Одолел модуль с логином-разлогином (самостоятельно пишу код функции login_view).
Скачал курс Ильи Феофанова про паттерны проектирования (насколько смог оценить, это действительно крутой курс - как в силу охвата: все паттерны, так и с позиции качества подачи). Вот только не понятно, кто фактически является автором курса (во введении автором представляется другой человек).

8 ноября 2021 г.
----------------
Делал домашнюю работу (модули по формам и админке) в рамках курса скиллбокса. В целом, писал по памяти. Скачал курс по тестированию API (от Арсения Батырова), смотрю. Просмотрел и попытался вникнуть в принцип SOLID (курс Феофанова). Да, битбакет опять не принимает (это в wsl, в винде все нормально) cгенерированных вчера ключей (я решил забить и теперь пушу-пулю через адрес https и с использованием пароля).

9 ноября 2021 г.
----------------
Сделал задания по аутентификации (логин-разлогин): сложность вызвал момент связывания модели комментариев с моделью пользователей (вторичная модель с первичной). Насчет битбакета, сгенерировал новый ключ (на этот раз только для пользователя mick) и второй дель полет нормальный. Не знаю, возможно, проблема в том, что ключ для root является источником проблем... 

10 ноября 2021 г.
-----------------
Сделал задания из модуля "Регистрация и права доступа" джанго-курса от скиллбокс. Наибольший интерес вызвало создание модели, формы и представления "профиль". В правах доступа не всегда срабатывает декоратор permission_required (а вот конструкция request.user.has_perm() работает без проблем).
Смотрю курс по автоматизации тестирования апи - как-то весьма скучно (наверное, потому что делаю это в полглаза и из-за этого маго что понятно).

11 ноября 2021 г.
-----------------
Изучаю модуль по работе с файлами. Сделал одно из заданий: при загрузке файла выводить его имя и размер, а также создать пару представление-форма для проверки содержимого файла на "плохие" слова.

12 ноября 2021 г.
-----------------
Занимался изучением модуля по тестированию, но фактически больше работал с файлами (загрузка из формы, чтение в бд и т.д.). Заодно просмотрел примеры тестирования у Винсента. Оказалось много общего со скиллбокс (но у последних приведены еще и продвинутые примеры тестирования - например, проверки отправки почты для смены пароля).

13 ноября 2021 г.
-----------------
Просмотрел курс по Docker от Oleksandr Kocherhin (когда-то ранее я его уже смотрел, но тогда ценностью этого курса не проникся). Замечу, что материал прекрасный - человек ясно и четко демонстрирует, как разрабатывать и деплоить под докер и докер-композ - всё понятно и, думается, возможно для повторения. В курсах Винсента уже приходилось использовать докер, но здесь (все таки не книга на английском, а видео на русском) все гораздо доходчивее. И поскольку докер стал стандартом в разработке, необходимо на него переходить (чем, собственно, и займусь в ближайшее время).

14 ноября 2021 г.
-----------------
Занялся докером, но возникли трудности - ошибки при сборке образа из докер-файла. Снес докер и поставил заново, но теперь не запускается сокет (это все на wsl). Наверное, придется переустановить убунту.

15 ноября 2021 г.
-----------------
Закончил просмотр курса от Skillbox. Перешел к изучению докера. Смотрю курс Антона Ларичева (про докер и ансибл). Установил на виртуальной машине линукс-сервер (общаться через ssh-ключ не желает, ну и ладно). Докер на wsl то работает, то нет (изначально после запуска). Помогают команды (какая из них, пока не понял, но по-моему все же первая) systemctl start docker.service и service docker start.

16 ноября 2021 г.
-----------------
Продолжаю смотреть курс Антона Ларичева про докер. Пытаюсь запускать прежние проекты (например, shop2021), но они не идут под облегченными образами. К тому же проблемы с Postgresql - настройки капризны и не видят порой переменных окружения.

17 ноября 2021 г.
-----------------
Досмотрел курс по докеру до ansible / swarm и понял, что эта информация совсем не является чем-то необходимым в данное время. Поэтому решил ограничиться первыми модулями (их более половины от обьема курса). Изучаю сборку на докер-композе композиции из контейнеров Django, Postgres, Gunicorn (просто ставится в зависимости и идет вместе с джанго) и Nginx.

18 ноября 2021 г.
-----------------
Занимался разработкой в докере. Научился создавать бд postgresql с кастомным пользователем прямо из docker-compose путем использования строки с url-адресом. Удалось запустить вариант проксирования приложения не через nginx, а с использованием "обратного HTTP-прокси и балансироващика нагрузки", т.е. подобного же сервера - traefik. 
С целью потренироваться в деплое приложения из докера приобрел еще один домен в рег.ру - docent63.ru.com. В качестве хостинга выбрал Google Cloud (дают 300 виртуальных долл., надеюсь, что платить все же не придется, а за домен, вроде как, деньги берут). Что получится - пока неизвестно. Зашел по адресу http://docent63.ru.com - там уже какая-то страница с предложениями купить авиабилеты или найти тьютера... В общем, скучно не будет.

19 ноября 2021 г.
-----------------
Сменил адрес с динамического на статический, и непонятная страница пропала. Домен привязан к адресу сервера (курлится и пингуется). Выкатил на сервер приложение на докере. Сначала запустил с traefik - результата не было никакого (браузер не мог получить от сервера ничего внятного). Потом сменил прокси-сервер на nginx. Здесь связь из докера наружу наладилась. Но отдается только страница nginx. Достучаться до приложения не получается.

20 ноября 2021 г.
-----------------
Удалось наладить связь приложения с внешним миром через докер (думаю, проблема возникла из-за опечатки в docker-compose.yml: config:wsgi:application--bind, т.е. перед --bind не был проставлен пробел). Теперь в браузере отображается страница приложения. Сделал рефакторинг кода деплоя (версия dev использует предварительно собранный образ, а prod выполняет двухэтапную сборку). Наладил статику и загрузку медиа-файлов.

21 ноября 2021 г.
-----------------
Разделил докер и докер-композ на dev и prod. Убрал все чувствительные данные в переменные окружения. Разобрался с тем, как правильно останавливать и удалять контейнеры (сначала обязательно stop, потом down).

22 ноября 2021 г.
-----------------
Зарегистрировался на GitLab. Создал там репо и залил с него данные на сервер. Через некоторое время решил это повторить, снес все на сервере. На этот раз данные не передаются, идет ошибка о том, что нет такой директории. Буду разбираться.

23 ноября 2021 г.
-----------------
В процессе экспериментов снес директория пользователя gitlab-runner и почикал его конфиг по адресу /etc/gitlab-runnter/config.toml, из-за чего данные не передавались (в конфиге вообще снес строки, в которых указывались имя и токен раннера, а также способ взаимодействия - через shell). Исправил эти проблемы, и данные стали заливаться. Но как-то странно, задача отмечалась ка выполненная, а данные на сервер не приходили. Нагуглил ключ для команды rsync: --recursive, и дело пошло на лад.  
После того, как данные стали загружаться, проверил возможность заливать их на сервер просто делая git push в локальном репо. Да, это работает. Далее решил написать скрипт к файле gitlab-ci.yml, чтобы при коммите происходил передеплой на сервере. Соответственно, это были команды dcprod ... и т.д. Поскольку они требуют прав superuser, возникла проблема, как передать эти права пользователю gitlab-runner. Пришлось включить его в группу sudoers (и само собой, в группу docker) и отредактировать файл /etc/sudoers. При этом нечаянно, пользуясь sudo (а надо бы visudo), нарушил синтаксис этого файла, и правильный вызов sudo стал невозможен - команды вызывали ошибку. Погуглил, нашел решение с одновременным использованием двух терминалов (в одном выясняем номер процесса сессии, во втором входим под этим номером, потом возвращаемся в первый... подробностей не помню), в общем, sudo восстановил. Потом снова запускал джобы и получал ошибки, пока не понял, что теперь sudo в файле gitlab-ci.yml писать не надо (т.к. присвоил пользователю gitlab-runner права суперпользователя). В итоге, все работает, но такая ситуация, когда на сервере есть еще один супер, мне не сильно нравится. Надо этот вопрос продумать и найти другой способ решения (пытался передавать sudo через переменные окружения, но не сработало).

24 ноября 2021 г.
-----------------
Настроить пайплайн для деплоя проекта удалось. В файле sudoers прописал право пользователю gitlab-runner работать без sudo в границах конкретного скрипта: docker-compose.prod.yml (естественно, надо указывать полный путь к этому скрипту). Также настроил migrate и collectstatic (их надо передавать с флагом -T, а в случае со статикой еще и --nounput,поскольку там задается вопрос перезаписывать ли файлы). 
Продолжил изучение гитлаба (создал список задач и каждую из них создал и, хотя и фрагментарно, но решил; построил доску и научился ею пользоваться).
В телеграмме скачал книгу Кирупы по основам JS, приступил к повторению и обучению.

25 ноября 2021 г.
-----------------
Занимался по книге Кирупы с воспроизведением наиболее интересного кода (создал отдельный репо js_book рядом с react_book kirupa). 

26 ноября 2021 г.
-----------------
Закончил конспектирование книги Кирупы. Скачал книгу Э. Нильсен "Практический анализ временных рядов...". Судя по содержанию, фундаментальный труд, содержащий четко структурированный теоретический и практический материал (используются R/Python).

27 ноября 2021 г.
-----------------
Начал изучение DRF (в очередной раз читаю и повторяю код книги Винсента). Выяснил, как создавать репо для фронта и бэка (где создавать .gitignore и что в него включать).

28 ноября 2021 г.
-----------------
Закончил просмотр и работу с кодом по книге Винсента (по документации апи - swagger в django3 не ставится прямо из коробки, особенности его настройки - в reastapi_notes). Приступил к повторному просмотру книги Юдина (там, где ReactNative на фронте и Django на бэке).
Просмотрел несколько видео по шаблонам проектирования от Феофанова (порождающие шаблоны: строитель, фабрика и прототип): интересно, но малопонятно.

29 ноября 2021 г.
-----------------
Сделал поиск вакансий во фронте hh. Создал проект hh_research. Возникли проблемы с маршрутизацией - не получается сделать параметризованные маршруты.

30 ноября 2021 г.
-----------------
Удалось сделать ссылки на параметризированные маршруты (хук userParams от react-router-dom, Link оттуда же, а также шаблонизированная строка `${id}`). Обновил бэкенд (и код, и контент) и теперь заливаю данные на сайт через админку.

1 декабря 2021 г.
-----------------
Запустил dev-версию проекта в докере. Надо запомнить, что переменные окружения для реакта обязательно имеют префикс REACT_APP (например, REACT_APP_URL). Для запуска prod-версии нужно настроить nginx и так далее.

2 декабря 2021 г.
-----------------
Продолжаю попытки запустить приложение в прод-режиме. Вроде бы получалось сделать так, чтобы и фронт, и бэк отдавались со статикой (для этого традиционные для джанго /static/ надо поменять на что-то другое, потому это такое же название носит папка у react/build). Но теперь выпадают ошибки 403 и 500.

3 декабря 2021 г.
-----------------
Удалось заставить фронт получать даннные из бэка в prod-режиме (для этого при сборке build использовал команду RUN sed -e -i 's!olg_address!new_address!' <filename>, где в качестве старого адреса выступает http://localhost..., а в качестве нового - http://docent...). Далее, в этом же режиме сделал 2-х этапную сборку фронтенда с nginx (базовый образ node, финальный образ nginx, в который копирутся каталог build из исходного образа).

4 декабря 2021 г.
-----------------
Занялся развертыванием проекта на сервере через Gitlab. Опять было много проблем (и некоторые остались): права на каталог для gitlab-runner и отсутствие поддержки сихронности изменений на сайте гитлаба и на сервере. Кроме того, не хватает мощности на то, чтобы собрать build на сервере (и на гитлабе - но здесь, думаю, у меня просто мало знаний, надо написать более изощренный скрипт). 

5 декабря 2021 г.
-----------------
Перешел на другой (более продвинутый) тариф gcp - тоже с 1 cpu, но ram 1,7 gb. Наладил окрытие внешних ссылок, поменяв в таблице Note название поля с link на url. 
Удалось перейти на https. Для этого пришлось немного переделать предлагаемый скрипт (из явно указанного автором - название домена и параметр получения сертификата - с 1 на 0, т.е. с тренировочного на боевой). И неявных - догадался изменить команды docker-compose на docker-compose -f docker-compose.prod.yml 
Осталась проблема: когда собирается образ, требуется каталог, которого еще нет в репозитории, а есть только на сервере. Пока решил это сборкой билда прямо на сервере. Т.е. силами гитлаба происходит лишь синхронизация контента в репо и на самом сервере (хорошо хотя бы то, что эта синхронизация, похоже, работает в одну сторону - т.е. контент на сервер только добавляется, но не удаляется). 

6 декабря 2021 г.
-----------------
Удалось настроить весь цикл сборки и деплоя: в докере через гитлаб с присвоением сертификата (последняя проблема с доступом к каталогу решалась опять таки через изменение прав на этот каталог). Теперь по команде пуш все собирается и выкатывается на сервер.
Сделал удачную верстку хедера - применил сетку бутстрапа (вместо одного блока сделал два: один собственно хедер, второй - для аутентификации) и изменил изначательные css-значений - теперь в хедере вся навигация ориентирована влево, а аутентификация (вход/выход) вправо.

7 декабря 2021 г.
-----------------
Занялся изучением логина-разлогина на основе JWT. Сделал простые формы и ссылки в хедере. Регистрация и вход из консоли проходят удачно. Вход из браузера тоже удачен, но непонятно пока, как сделать редирект. Кроме того, надо разобраться с тем, как обновлять неактуальные токены доступа на основе токена обновления с использованием хука useEffect.

8 декабря 2021 г.
-----------------
Решил проблемы с токенами, входом и выходом. Снес (почти случайно) контент на сервере, из-за чего возникли сложности с получением сертификата.

9 декабря 2021 г.
-----------------
Сертификат восстановил (для этого ничего придумывать не надо: достаточно запустить скрипт и не трогать полноценный конфиг nginx для https).
Есть другая проблема: выведение имени пользователя на хедер - никак не могу добиться синхронизации (похоже, проверка на наличие токена, откуда беру имя, происходит быстрее, чем этот самый токе приходит).

10 декабря 2021 г.
------------------
На гугл-платформе начались непонятные вещи: при обращении по имени домена сайт выдает "Не удается получить доступ к сайту", при этом curl по ip-адресу нормально выдает страницу nginx. Проверил настройки dns и у регистратора, и у гугла - вроде все в порядке: имена dns-серверов те, записи типов A, NS и CNAME присутствуют (тип А связывает нужный домен с нужным адресом). При этом проверка у регистратора по связи домена и ns-сервера дает что-то невразумительное (transfer failed и все такое). 
На это фоне завел учетную запись на Azure и создал там виртуальный сервер (по идее, бесплатный - примерно 550 р. в месяц при 750 часах бесплатной работы в месяц и при кредите в 100 долл. по учебному статусу) с 1 ядром, 1 Гг оперативки и 4 Гг хранилища (имеется в виду SSD?), и дисковым пространством в 30Гг. Буду осваивать.
По проекту - добавил почту при регистрации (но только базовую функциональность, без ссылки для подтверждения и ее обработки).

11 декабря 2021 г.
------------------
Сайт на гугл-платформе так же неожиданно поднялся, как до этого упал. На азур залил через гитлаб в докере простое django-приложение crud, в котором реализованы все основные операции по работе с контентом через модельную форму и представления-функции.

12 декабря 2021 г.
------------------
Дополнил проект crud представлениями-классами ListView и DetailView (попутно вспомнил про object_list/context_object_name и разобрался в том, когда и как применять static: static_url/static_root, а также как завести более одного base.html).

13 декабря 2021 г.
------------------
Добавил приложение api в проект crud. Приложение содержит таблицы постов, комментариев и категорий, имеет ендпоинты для crud-операций по указанным таблицам.

14 декабря 2021 г.
------------------
Реализовал crud-операции, однако но есть проблемы: для этого пришлось отключить ограничения доступа, есть неясности с маршрутами на фронтенде (news/ не хочет отдавать рендеринг компонент create/update), обновление содержимого страницы надо доводить до ума (главная задача здесь - научиться отображать прежний контент, причем не как placeholder, а с возможностью редактирования).

15 декабря 2021 г.
------------------
Доделал crud-операции и унифицировал код их реализации (но перечисленные проблемы остались, не считаю их ошибками, но решать их придется).

16 декабря 2021 г.
------------------
Начал просмотр курса (на англ.) под названием 'React and Django A Practical Guide with Docker'. Ожидается много интересного (как для бэка, так и для фронта).

17 декабря 2021 г.
------------------
Продолжаю смотреть курс по джанго и реакту. Начал изучение книги Моргунова по postgresql (для этого собрал в докере постгрес-приложение с учебной бд о работе аэропортов).

18 декабря 2021 г.
------------------
На основе просмотренного пытаюсь осуществить загрузку файлов по api. Идут различные ошибки, как с реакта, так и чеерез панель drf (здесь ошибка такая - permission denied).

19 декабря 2021 г.
------------------
Как выяснилось, ошибка возникала из-за того, что в контейнере был предустановлен пользователь app. Переписал докер-файл без участия этого пользователя, и разрешения появились. В результате сделал таки загрузку картинок в файловую систему.

20 декабря 2021 г. 
------------------
Сделал перевод фокуса по полям формы (дело осложняло то, что в результате следовал сетевой запрос, поэтому пришлось применить условие if(password) {запрос}).

21 декабря 2021 г.
------------------
Удалось сделить аутентификацию по email: в джанго изменил настройки для allouth / rest-auth именно для почты, а для simple_jwt просто указал {username:email}, т.е. эта библиотека нормально воспринимает, когда ей в качестве имени пользователя отдают его почту.

